import BatchRequest from "../../../src/common/batch/BatchRequest";
import SerializationResponseMockStrings from "./mock.response.serialization.strings";
import SerializationBatchOperationFactory from "./mock.serialization.batchoperation.factory";
import * as Models from "../../../src/table/generated/artifacts/models";
import toReadableStream from "to-readable-stream";

export default class SerializationObjectForBatchRequestFactory {
  public static GetBatchRequestForResponseMock(): BatchRequest {
    const mockRequest = new BatchRequest(
      SerializationBatchOperationFactory.GetBatchOperationMockForQueryEntityWithPartitionKeyAndRowKey(
        SerializationResponseMockStrings.BatchQueryWithPartitionKeyAndRowKeyRequestHeaders
      )
    );
    return mockRequest;
  }

  public static GetBatchTableQueryEntitiesWithPartitionAndRowKeyResponseMock() {
    const responseObject = new Object() as Models.TableQueryEntitiesWithPartitionAndRowKeyResponse;
    // If a client request id header is sent in the request, this header will be present in the
    // response with the same value.
    responseObject.clientRequestId = "";
    // This header uniquely identifies the request that was made and can be used for troubleshooting
    // the request.
    responseObject.requestId = "";
    // Indicates the version of the Table service used to execute the request. This header is
    // returned for requests made against version 2009-09-19 and above.
    responseObject.version = "";
    // UTC date/time value generated by the service that indicates the time at which the response was
    // initiated.
    responseObject.date = new Date();
    // UTC date/time value generated by the service that indicates the time at which the response was
    // initiated
    // code formatter / prettier is messing up the string format which messes the response
    // prettier-ignore
    responseObject.eTag = 'W/"datetime\'2021-02-05T17%3A15%3A16.7935715Z\'"';
    // This header contains the continuation token value for partition key.
    responseObject.xMsContinuationNextPartitionKey = "";
    // This header contains the continuation token value for row key.
    responseObject.xMsContinuationNextRowKey = "";
    responseObject.errorCode = "";
    // this is node10 only, which is causing issues for our pipelines

    responseObject.body = toReadableStream(
      '{"odata.metadata":"https://asynccopiertesttarget.table.core.windows.net/$metadata#TestingAzurite/@Element",\
"odata.etag":"W/"datetime\'2021-02-05T17%3A15%3A16.7935715Z\'"","PartitionKey":"part1","RowKey":"row161254531681303585",\
"Timestamp":"2021-02-05T17:15:16.7935715Z","myValue":"value1"}'
    );
    responseObject.statusCode = 200;

    return responseObject as Models.TableQueryEntitiesWithPartitionAndRowKeyResponse;
  }
}
