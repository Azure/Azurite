/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// tslint:disable:max-line-length
// tslint:disable:interface-name
// tslint:disable:quotemark

/**
 * An interface representing AclFailedEntry.
 */
export interface AclFailedEntry {
  name?: string;
  type?: string;
  errorMessage?: string;
}

/**
 * An interface representing SetAccessControlRecursiveResponse.
 */
export interface SetAccessControlRecursiveResponse {
  directoriesSuccessful?: number;
  filesSuccessful?: number;
  failureCount?: number;
  failedEntries?: AclFailedEntry[];
}

/**
 * An interface representing Path.
 */
export interface Path {
  name?: string;
  /**
   * Default value: false.
   */
  isDirectory?: boolean;
  lastModified?: Date;
  etag?: string;
  contentLength?: number;
  owner?: string;
  group?: string;
  permissions?: string;
  /**
   * The name of the encryption scope under which the blob is encrypted.
   */
  encryptionScope?: string;
}

/**
 * An interface representing PathList.
 */
export interface PathList {
  paths?: Path[];
}

/**
 * An interface representing FileSystem.
 */
export interface FileSystem {
  name?: string;
  lastModified?: string;
  eTag?: string;
}

/**
 * Properties of a blob
 */
export interface BlobPropertiesInternal {
  creationTime?: Date;
  lastModified: Date;
  etag: string;
  /**
   * Size in bytes
   */
  contentLength?: number;
  contentType?: string;
  contentEncoding?: string;
  contentLanguage?: string;
  contentMD5?: Uint8Array;
  contentDisposition?: string;
  cacheControl?: string;
  blobSequenceNumber?: number;
  copyId?: string;
  copySource?: string;
  copyProgress?: string;
  copyCompletionTime?: Date;
  copyStatusDescription?: string;
  serverEncrypted?: boolean;
  incrementalCopy?: boolean;
  destinationSnapshot?: string;
  deletedTime?: Date;
  remainingRetentionDays?: number;
  accessTierInferred?: boolean;
  customerProvidedKeySha256?: string;
  /**
   * The name of the encryption scope under which the blob is encrypted.
   */
  encryptionScope?: string;
  accessTierChangeTime?: Date;
  tagCount?: number;
  expiresOn?: Date;
  isSealed?: boolean;
  lastAccessedOn?: Date;
  deleteTime?: Date;
  properties?: string;
  /**
   * Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'
   */
  blobType?: BlobType;
  /**
   * Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  /**
   * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * Possible values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Possible values include: 'pending', 'success', 'aborted', 'failed'
   */
  copyStatus?: CopyStatusType;
  /**
   * Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70',
   * 'P80', 'Hot', 'Cool', 'Archive', 'Premium'
   */
  accessTier?: AccessTier;
  /**
   * Possible values include: 'rehydrate-pending-to-hot', 'rehydrate-pending-to-cool'
   */
  archiveStatus?: ArchiveStatus;
  /**
   * Possible values include: 'High', 'Standard'
   */
  rehydratePriority?: RehydratePriority;
  immutabilityPolicyExpiresOn?: Date;
  /**
   * Possible values include: 'Mutable', 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  legalHold?: boolean;
}

/**
 * An interface representing BlobMetadata.
 */
export interface BlobMetadata {
  encrypted?: string;
  /**
   * Describes unknown properties. The value of an unknown property MUST be of type "string". Due
   * to valid TS constraints we have modeled this as a union of `string | any`.
   */
  [property: string]: string | any;
}

/**
 * An interface representing BlobTag.
 */
export interface BlobTag {
  key: string;
  value: string;
}

/**
 * Blob tags
 */
export interface BlobTags {
  blobTagSet: BlobTag[];
}

/**
 * An Azure Storage blob
 */
export interface BlobItemInternal {
  name: string;
  deleted?: boolean;
  snapshot?: string;
  versionId?: string;
  isCurrentVersion?: boolean;
  properties: BlobPropertiesInternal;
  deletionId?: string;
  metadata?: BlobMetadata;
  blobTags?: BlobTags;
  objectReplicationMetadata?: { [propertyName: string]: string };
  hasVersionsOnly?: boolean;
}

/**
 * An interface representing BlobFlatListSegment.
 */
export interface BlobFlatListSegment {
  blobItems: BlobItemInternal[];
}

/**
 * An enumeration of blobs
 */
export interface ListBlobsFlatSegmentResponse {
  serviceEndpoint: string;
  containerName: string;
  prefix?: string;
  marker?: string;
  maxResults?: number;
  segment: BlobFlatListSegment;
  nextMarker?: string;
}

/**
 * An interface representing BlobPrefix.
 */
export interface BlobPrefix {
  name: string;
}

/**
 * An interface representing BlobHierarchyListSegment.
 */
export interface BlobHierarchyListSegment {
  blobPrefixes?: BlobPrefix[];
  blobItems: BlobItemInternal[];
}

/**
 * An enumeration of blobs
 */
export interface ListBlobsHierarchySegmentResponse {
  serviceEndpoint: string;
  containerName: string;
  prefix?: string;
  marker?: string;
  maxResults?: number;
  delimiter?: string;
  segment: BlobHierarchyListSegment;
  nextMarker?: string;
}

/**
 * An interface representing FileSystemList.
 */
export interface FileSystemList {
  filesystems?: FileSystem[];
}

/**
 * The service error response object.
 */
export interface StorageErrorError {
  /**
   * The service error code.
   */
  code?: string;
  /**
   * The service error message.
   */
  message?: string;
}

/**
 * An interface representing StorageError.
 */
export interface StorageError {
  /**
   * The service error message.
   */
  message?: string;
  /**
   * The service error response object.
   */
  error?: StorageErrorError;
}

/**
 * Key information
 */
export interface KeyInfo {
  /**
   * The date-time the key is active in ISO 8601 UTC time
   */
  start: string;
  /**
   * The date-time the key expires in ISO 8601 UTC time
   */
  expiry: string;
}

/**
 * A user delegation key
 */
export interface UserDelegationKey {
  /**
   * The Azure Active Directory object ID in GUID format.
   */
  signedOid: string;
  /**
   * The Azure Active Directory tenant ID in GUID format
   */
  signedTid: string;
  /**
   * The date-time the key is active
   * **NOTE: This entity will be treated as a string instead of a Date because the API can
   * potentially deal with a higher precision value than what is supported by JavaScript.**
   */
  signedStart: string;
  /**
   * The date-time the key expires
   * **NOTE: This entity will be treated as a string instead of a Date because the API can
   * potentially deal with a higher precision value than what is supported by JavaScript.**
   */
  signedExpiry: string;
  /**
   * Abbreviation of the Azure Storage service that accepts the key
   */
  signedService: string;
  /**
   * The service version that created the key
   */
  signedVersion: string;
  /**
   * The key as a base64 string
   */
  value: string;
}

/**
 * An Access policy
 */
export interface AccessPolicy {
  /**
   * the date-time the policy is active
   * **NOTE: This entity will be treated as a string instead of a Date because the API can
   * potentially deal with a higher precision value than what is supported by JavaScript.**
   */
  start?: string;
  /**
   * the date-time the policy expires
   * **NOTE: This entity will be treated as a string instead of a Date because the API can
   * potentially deal with a higher precision value than what is supported by JavaScript.**
   */
  expiry?: string;
  /**
   * the permissions for the acl policy
   */
  permission?: string;
}

/**
 * An interface representing BlobName.
 */
export interface BlobName {
  /**
   * Indicates if the blob name is encoded.
   */
  encoded?: boolean;
  /**
   * The name of the blob.
   */
  content?: string;
}

/**
 * Represents a single block in a block blob.  It describes the block's ID and size.
 */
export interface Block {
  /**
   * The base64 encoded block ID.
   */
  name: string;
  /**
   * The block size in bytes.
   */
  size: number;
}

/**
 * An interface representing BlockList.
 */
export interface BlockList {
  committedBlocks?: Block[];
  uncommittedBlocks?: Block[];
}

/**
 * An interface representing BlockLookupList.
 */
export interface BlockLookupList {
  committed?: string[];
  uncommitted?: string[];
  latest?: string[];
}

/**
 * Properties of a container
 */
export interface ContainerProperties {
  lastModified: Date;
  etag: string;
  /**
   * Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  /**
   * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * Possible values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Possible values include: 'container', 'blob'
   */
  publicAccess?: PublicAccessType;
  hasImmutabilityPolicy?: boolean;
  hasLegalHold?: boolean;
  defaultEncryptionScope?: string;
  preventEncryptionScopeOverride?: boolean;
  deletedTime?: Date;
  remainingRetentionDays?: number;
  /**
   * Indicates if version level worm is enabled on this container.
   */
  isImmutableStorageWithVersioningEnabled?: boolean;
}

/**
 * An Azure Storage container
 */
export interface ContainerItem {
  name: string;
  deleted?: boolean;
  version?: string;
  properties: ContainerProperties;
  metadata?: { [propertyName: string]: string };
}

/**
 * Groups the settings used for interpreting the blob data if the blob is delimited text formatted.
 */
export interface DelimitedTextConfiguration {
  /**
   * The string used to separate columns.
   */
  columnSeparator?: string;
  /**
   * The string used to quote a specific field.
   */
  fieldQuote?: string;
  /**
   * The string used to separate records.
   */
  recordSeparator?: string;
  /**
   * The string used as an escape character.
   */
  escapeChar?: string;
  /**
   * Represents whether the data has headers.
   */
  headersPresent?: boolean;
}

/**
 * json text configuration
 */
export interface JsonTextConfiguration {
  /**
   * The string used to separate records.
   */
  recordSeparator?: string;
}

/**
 * Groups settings regarding specific field of an arrow schema
 */
export interface ArrowField {
  type: string;
  name?: string;
  precision?: number;
  scale?: number;
}

/**
 * Groups the settings used for formatting the response if the response should be Arrow formatted.
 */
export interface ArrowConfiguration {
  schema: ArrowField[];
}

/**
 * An enumeration of containers
 */
export interface ListContainersSegmentResponse {
  serviceEndpoint: string;
  prefix?: string;
  marker?: string;
  maxResults?: number;
  containerItems: ContainerItem[];
  nextMarker?: string;
}

/**
 * CORS is an HTTP feature that enables a web application running under one domain to access
 * resources in another domain. Web browsers implement a security restriction known as same-origin
 * policy that prevents a web page from calling APIs in a different domain; CORS provides a secure
 * way to allow one domain (the origin domain) to call APIs in another domain
 */
export interface CorsRule {
  /**
   * The origin domains that are permitted to make a request against the storage service via CORS.
   * The origin domain is the domain from which the request originates. Note that the origin must
   * be an exact case-sensitive match with the origin that the user age sends to the service. You
   * can also use the wildcard character '*' to allow all origin domains to make requests via CORS.
   */
  allowedOrigins: string;
  /**
   * The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma
   * separated)
   */
  allowedMethods: string;
  /**
   * the request headers that the origin domain may specify on the CORS request.
   */
  allowedHeaders?: string;
  /**
   * The response headers that may be sent in the response to the CORS request and exposed by the
   * browser to the request issuer
   */
  exposedHeaders?: string;
  /**
   * The maximum amount time that a browser should cache the preflight OPTIONS request.
   */
  maxAgeInSeconds: number;
}

/**
 * Blob info from a Filter Blobs API call
 */
export interface FilterBlobItem {
  name: string;
  containerName: string;
  tags?: BlobTags;
  versionId?: string;
  isCurrentVersion?: boolean;
}

/**
 * The result of a Filter Blobs API call
 */
export interface FilterBlobSegment {
  serviceEndpoint: string;
  where: string;
  blobs: FilterBlobItem[];
  nextMarker?: string;
}

/**
 * Geo-Replication information for the Secondary Storage Service
 */
export interface GeoReplication {
  /**
   * The status of the secondary location. Possible values include: 'live', 'bootstrap',
   * 'unavailable'
   */
  status: GeoReplicationStatusType;
  /**
   * A GMT date/time value, to the second. All primary writes preceding this value are guaranteed
   * to be available for read operations at the secondary. Primary writes after this point in time
   * may or may not be available for reads.
   */
  lastSyncTime: Date;
}

/**
 * the retention policy which determines how long the associated data should persist
 */
export interface RetentionPolicy {
  /**
   * Indicates whether a retention policy is enabled for the storage service
   */
  enabled: boolean;
  /**
   * Indicates the number of days that metrics or logging or soft-deleted data should be retained.
   * All data older than this value will be deleted
   */
  days?: number;
  /**
   * Indicates whether permanent delete is allowed on this storage account.
   */
  allowPermanentDelete?: boolean;
}

/**
 * Azure Analytics Logging settings.
 */
export interface Logging {
  /**
   * The version of Storage Analytics to configure.
   */
  version: string;
  /**
   * Indicates whether all delete requests should be logged.
   */
  deleteProperty: boolean;
  /**
   * Indicates whether all read requests should be logged.
   */
  read: boolean;
  /**
   * Indicates whether all write requests should be logged.
   */
  write: boolean;
  retentionPolicy: RetentionPolicy;
}

/**
 * a summary of request statistics grouped by API in hour or minute aggregates for blobs
 */
export interface Metrics {
  /**
   * The version of Storage Analytics to configure.
   */
  version?: string;
  /**
   * Indicates whether metrics are enabled for the Blob service.
   */
  enabled: boolean;
  /**
   * Indicates whether metrics should generate summary statistics for called API operations.
   */
  includeAPIs?: boolean;
  retentionPolicy?: RetentionPolicy;
}

/**
 * An interface representing PageRange.
 */
export interface PageRange {
  start: number;
  end: number;
}

/**
 * An interface representing ClearRange.
 */
export interface ClearRange {
  start: number;
  end: number;
}

/**
 * the list of pages
 */
export interface PageList {
  pageRange?: PageRange[];
  clearRange?: ClearRange[];
  nextMarker?: string;
}

/**
 * An interface representing QueryFormat.
 */
export interface QueryFormat {
  /**
   * Possible values include: 'delimited', 'json', 'arrow', 'parquet'
   */
  type: QueryFormatType;
  delimitedTextConfiguration?: DelimitedTextConfiguration;
  jsonTextConfiguration?: JsonTextConfiguration;
  arrowConfiguration?: ArrowConfiguration;
  parquetTextConfiguration?: any;
}

/**
 * An interface representing QuerySerialization.
 */
export interface QuerySerialization {
  format: QueryFormat;
}

/**
 * Groups the set of query request settings.
 */
export interface QueryRequest {
  /**
   * The query expression in SQL. The maximum size of the query expression is 256KiB.
   */
  expression: string;
  inputSerialization?: QuerySerialization;
  outputSerialization?: QuerySerialization;
}

/**
 * signed identifier
 */
export interface SignedIdentifier {
  /**
   * a unique id
   */
  id: string;
  accessPolicy: AccessPolicy;
}

/**
 * The properties that enable an account to host a static website
 */
export interface StaticWebsite {
  /**
   * Indicates whether this account is hosting a static website
   */
  enabled: boolean;
  /**
   * The default name of the index page under each directory
   */
  indexDocument?: string;
  /**
   * The absolute path of the custom 404 page
   */
  errorDocument404Path?: string;
  /**
   * Absolute path of the default index page
   */
  defaultIndexDocumentPath?: string;
}

/**
 * Storage Service Properties.
 */
export interface StorageServiceProperties {
  logging?: Logging;
  hourMetrics?: Metrics;
  minuteMetrics?: Metrics;
  /**
   * The set of CORS rules.
   */
  cors?: CorsRule[];
  /**
   * The default version to use for requests to the Blob service if an incoming request's version
   * is not specified. Possible values include version 2008-10-27 and all more recent versions
   */
  defaultServiceVersion?: string;
  deleteRetentionPolicy?: RetentionPolicy;
  staticWebsite?: StaticWebsite;
}

/**
 * Stats for the storage service.
 */
export interface StorageServiceStats {
  geoReplication?: GeoReplication;
}

/**
 * Additional parameters for a set of operations.
 */
export interface ModifiedAccessConditions {
  /**
   * Specify this header value to operate only on a blob if it has been modified since the
   * specified date/time.
   */
  ifModifiedSince?: Date;
  /**
   * Specify this header value to operate only on a blob if it has not been modified since the
   * specified date/time.
   */
  ifUnmodifiedSince?: Date;
  /**
   * Specify an ETag value to operate only on blobs with a matching value.
   */
  ifMatch?: string;
  /**
   * Specify an ETag value to operate only on blobs without a matching value.
   */
  ifNoneMatch?: string;
  /**
   * Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
   */
  ifTags?: string;
}

/**
 * Additional parameters for a set of operations.
 */
export interface PathHTTPHeaders {
  /**
   * Optional. Sets the blob's cache control. If specified, this property is stored with the blob
   * and returned with a read request.
   */
  cacheControl?: string;
  /**
   * Optional. Sets the blob's content encoding. If specified, this property is stored with the
   * blob and returned with a read request.
   */
  contentEncoding?: string;
  /**
   * Optional. Set the blob's content language. If specified, this property is stored with the blob
   * and returned with a read request.
   */
  contentLanguage?: string;
  /**
   * Optional. Sets the blob's Content-Disposition header.
   */
  contentDisposition?: string;
  /**
   * Optional. Sets the blob's content type. If specified, this property is stored with the blob
   * and returned with a read request.
   */
  contentType?: string;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  contentMD5?: Uint8Array;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentHash?: Uint8Array;
}

/**
 * Additional parameters for a set of operations.
 */
export interface LeaseAccessConditions {
  /**
   * If specified, the operation only succeeds if the resource's lease is active and matches this
   * ID.
   */
  leaseId?: string;
}

/**
 * Additional parameters for a set of operations.
 */
export interface SourceModifiedAccessConditions {
  /**
   * Specify an ETag value to operate only on blobs with a matching value.
   */
  sourceIfMatch?: string;
  /**
   * Specify an ETag value to operate only on blobs without a matching value.
   */
  sourceIfNoneMatch?: string;
  /**
   * Specify this header value to operate only on a blob if it has been modified since the
   * specified date/time.
   */
  sourceIfModifiedSince?: Date;
  /**
   * Specify this header value to operate only on a blob if it has not been modified since the
   * specified date/time.
   */
  sourceIfUnmodifiedSince?: Date;
  /**
   * Specify a SQL where clause on blob tags to operate only on blobs with a matching value.
   */
  sourceIfTags?: string;
}

/**
 * Additional parameters for a set of operations.
 */
export interface CpkInfo {
  /**
   * Optional. Specifies the encryption key to use to encrypt the data provided in the request. If
   * not specified, encryption is performed with the root account encryption key.  For more
   * information, see Encryption at Rest for Azure Storage Services.
   */
  encryptionKey?: string;
  /**
   * The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key
   * header is provided.
   */
  encryptionKeySha256?: string;
  /**
   * The algorithm used to produce the encryption key hash. Currently, the only accepted value is
   * "AES256". Must be provided if the x-ms-encryption-key header is provided. Possible values
   * include: 'AES256'
   */
  encryptionAlgorithm?: EncryptionAlgorithmType;
}

/**
 * Additional parameters for create operation.
 */
export interface ContainerCpkScopeInfo {
  /**
   * Optional.  Version 2019-07-07 and later.  Specifies the default encryption scope to set on the
   * container and use for all future writes.
   */
  defaultEncryptionScope?: string;
  /**
   * Optional.  Version 2019-07-07 and newer.  If true, prevents any request from specifying a
   * different encryption scope than the scope set on the container.
   */
  preventEncryptionScopeOverride?: boolean;
}

/**
 * Additional parameters for a set of operations.
 */
export interface BlobHTTPHeaders {
  /**
   * Optional. Sets the blob's content type. If specified, this property is stored with the blob
   * and returned with a read request.
   */
  blobContentType?: string;
  /**
   * Optional. Sets the blob's content encoding. If specified, this property is stored with the
   * blob and returned with a read request.
   */
  blobContentEncoding?: string;
  /**
   * Optional. Set the blob's content language. If specified, this property is stored with the blob
   * and returned with a read request.
   */
  blobContentLanguage?: string;
  /**
   * Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes
   * for the individual blocks were validated when each was uploaded.
   */
  blobContentMD5?: Uint8Array;
  /**
   * Optional. Sets the blob's cache control. If specified, this property is stored with the blob
   * and returned with a read request.
   */
  blobCacheControl?: string;
  /**
   * Optional. Sets the blob's Content-Disposition header.
   */
  blobContentDisposition?: string;
}

/**
 * Additional parameters for a set of operations.
 */
export interface CpkScopeInfo {
  /**
   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to
   * encrypt the data provided in the request. If not specified, encryption is performed with the
   * default account encryption scope.  For more information, see Encryption at Rest for Azure
   * Storage Services.
   */
  encryptionScope?: string;
}

/**
 * Additional parameters for a set of operations, such as: PageBlob_uploadPages,
 * PageBlob_clearPages, PageBlob_uploadPagesFromURL.
 */
export interface SequenceNumberAccessConditions {
  /**
   * Specify this header value to operate only on a blob if it has a sequence number less than or
   * equal to the specified.
   */
  ifSequenceNumberLessThanOrEqualTo?: number;
  /**
   * Specify this header value to operate only on a blob if it has a sequence number less than the
   * specified.
   */
  ifSequenceNumberLessThan?: number;
  /**
   * Specify this header value to operate only on a blob if it has the specified sequence number.
   */
  ifSequenceNumberEqualTo?: number;
}

/**
 * Additional parameters for a set of operations, such as: AppendBlob_appendBlock,
 * AppendBlob_appendBlockFromUrl, AppendBlob_seal.
 */
export interface AppendPositionAccessConditions {
  /**
   * Optional conditional header. The max length in bytes permitted for the append blob. If the
   * Append Block operation would cause the blob to exceed that limit or if the blob size is
   * already greater than the value specified in this header, the request will fail with
   * MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).
   */
  maxSize?: number;
  /**
   * Optional conditional header, used only for the Append Block operation. A number indicating the
   * byte offset to compare. Append Block will succeed only if the append position is equal to this
   * number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP
   * status code 412 - Precondition Failed).
   */
  appendPosition?: number;
}

/**
 * An interface representing DataLakeStorageClientOptions.
 */
export interface DataLakeStorageClientOptions {
  /**
   * Specifies the version of the operation to use for this request.
   */
  version?: string;
  /**
   * The lease duration is required to acquire a lease, and specifies the duration of the lease in
   * seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.
   */
  xMsLeaseDuration?: number;
}

/**
 * Optional Parameters.
 */
export interface ServiceListFileSystemsOptionalParams {
  /**
   * Filters results to filesystems within the specified prefix.
   */
  prefix?: string;
  /**
   * Optional.  When deleting a directory, the number of paths that are deleted with each
   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a
   * continuation token is returned in this response header.  When a continuation token is returned
   * in the response, it must be specified in a subsequent invocation of the delete operation to
   * continue deleting the directory.
   */
  continuation?: string;
  /**
   * An optional value that specifies the maximum number of items to return. If omitted or greater
   * than 5,000, the response will include up to 5,000 items.
   */
  maxResults?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
}

/**
 * Optional Parameters.
 */
export interface ServiceSetPropertiesOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceGetPropertiesOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceGetStatisticsOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceListContainersSegmentOptionalParams {
  /**
   * Filters results to filesystems within the specified prefix.
   */
  prefix?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Include this parameter to specify that the container's metadata be returned as part of the
   * response body.
   */
  include?: ListContainersIncludeType[];
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceGetUserDelegationKeyOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceSubmitBatchOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceFilterBlobsOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Filters the results to return only to return only blobs whose tags match the specified
   * expression.
   */
  where?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Include this parameter to specify one or more datasets to include in the response.
   */
  include?: FilterBlobsIncludeItem[];
}

/**
 * Optional Parameters.
 */
export interface FileSystemCreateOptionalParams {
  /**
   * Optional. User-defined properties to be stored with the filesystem, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.  If the filesystem exists, any properties not included in the list will be
   * removed.  All properties are removed if the header is omitted.  To merge new and existing
   * properties, first get all existing properties and the current E-Tag, then make a conditional
   * request with the E-Tag and include values for all properties.
   */
  properties?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
}

/**
 * Optional Parameters.
 */
export interface FileSystemSetPropertiesOptionalParams {
  /**
   * Optional. User-defined properties to be stored with the filesystem, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.  If the filesystem exists, any properties not included in the list will be
   * removed.  All properties are removed if the header is omitted.  To merge new and existing
   * properties, first get all existing properties and the current E-Tag, then make a conditional
   * request with the E-Tag and include values for all properties.
   */
  properties?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface FileSystemGetPropertiesOptionalParams {
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
}

/**
 * Optional Parameters.
 */
export interface FileSystemDeleteMethodOptionalParams {
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface FileSystemListPathsOptionalParams {
  /**
   * Optional.  When deleting a directory, the number of paths that are deleted with each
   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a
   * continuation token is returned in this response header.  When a continuation token is returned
   * in the response, it must be specified in a subsequent invocation of the delete operation to
   * continue deleting the directory.
   */
  continuation?: string;
  /**
   * Optional.  Filters results to paths within the specified directory. An error occurs if the
   * directory does not exist.
   */
  path?: string;
  /**
   * An optional value that specifies the maximum number of items to return. If omitted or greater
   * than 5,000, the response will include up to 5,000 items.
   */
  maxResults?: number;
  /**
   * Optional. Valid only when Hierarchical Namespace is enabled for the account. If "true", the
   * user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers
   * will be transformed from Azure Active Directory Object IDs to User Principal Names.  If
   * "false", the values will be returned as Azure Active Directory Object IDs. The default value
   * is false. Note that group and application Object IDs are not translated because they do not
   * have unique friendly names.
   */
  upn?: boolean;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
}

/**
 * Optional Parameters.
 */
export interface FileSystemListBlobFlatSegmentOptionalParams {
  /**
   * Filters results to filesystems within the specified prefix.
   */
  prefix?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * An optional value that specifies the maximum number of items to return. If omitted or greater
   * than 5,000, the response will include up to 5,000 items.
   */
  maxResults?: number;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Include this parameter to specify one or more datasets to include in the response.
   */
  include?: ListBlobsIncludeItem[];
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface FileSystemListBlobHierarchySegmentOptionalParams {
  /**
   * Filters results to filesystems within the specified prefix.
   */
  prefix?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * An optional value that specifies the maximum number of items to return. If omitted or greater
   * than 5,000, the response will include up to 5,000 items.
   */
  maxResults?: number;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Include this parameter to specify one or more datasets to include in the response.
   */
  include?: ListBlobsIncludeItem[];
  /**
   * Include this parameter to specify one or more datasets to include in the response. Possible
   * values include: 'deleted'
   */
  showonly?: ListBlobsShowOnly;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface PathCreateOptionalParams {
  /**
   * Required only for Create File and Create Directory. The value must be "file" or "directory".
   * Possible values include: 'directory', 'file'
   */
  resource?: PathResourceType;
  /**
   * Optional.  When deleting a directory, the number of paths that are deleted with each
   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a
   * continuation token is returned in this response header.  When a continuation token is returned
   * in the response, it must be specified in a subsequent invocation of the delete operation to
   * continue deleting the directory.
   */
  continuation?: string;
  /**
   * Optional. Valid only when namespace is enabled. This parameter determines the behavior of the
   * rename operation. The value must be "legacy" or "posix", and the default value will be
   * "posix". Possible values include: 'legacy', 'posix'
   */
  mode?: PathRenameMode;
  /**
   * An optional file or directory to be renamed.  The value must have the following format:
   * "/{filesystem}/{path}".  If "x-ms-properties" is specified, the properties will overwrite the
   * existing properties; otherwise, the existing properties will be preserved. This value must be
   * a URL percent-encoded string. Note that the string may only contain ASCII characters in the
   * ISO-8859-1 character set.
   */
  renameSource?: string;
  /**
   * A lease ID for the source path. If specified, the source path must have an active lease and
   * the lease ID must match.
   */
  sourceLeaseId?: string;
  /**
   * Optional. User-defined properties to be stored with the filesystem, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.  If the filesystem exists, any properties not included in the list will be
   * removed.  All properties are removed if the header is omitted.  To merge new and existing
   * properties, first get all existing properties and the current E-Tag, then make a conditional
   * request with the E-Tag and include values for all properties.
   */
  properties?: string;
  /**
   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX
   * access permissions for the file owner, the file owning group, and others. Each class may be
   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic
   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.
   */
  permissions?: string;
  /**
   * Optional and only valid if Hierarchical Namespace is enabled for the account. When creating a
   * file or directory and the parent folder does not have a default ACL, the umask restricts the
   * permissions of the file or directory to be created.  The resulting permission is given by p
   * bitwise and not u, where p is the permission and u is the umask.  For example, if p is 0777
   * and u is 0057, then the resulting permission is 0720.  The default permission is 0777 for a
   * directory and 0666 for a file.  The default umask is 0027.  The umask must be specified in
   * 4-digit octal notation (e.g. 0766).
   */
  umask?: string;
  /**
   * Optional. The owner of the blob or directory.
   */
  owner?: string;
  /**
   * Optional. The owning group of the blob or directory.
   */
  group?: string;
  /**
   * Sets POSIX access control rights on files and directories. The value is a comma-separated list
   * of access control entries. Each access control entry (ACE) consists of a scope, a type, a user
   * or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".
   */
  acl?: string;
  /**
   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if
   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list
   * of valid GUID string formats.
   */
  proposedLeaseId?: string;
  /**
   * The lease duration is required to acquire a lease, and specifies the duration of the lease in
   * seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.
   */
  leaseDuration?: number;
  /**
   * Required. Indicates mode of the expiry time. Possible values include: 'NeverExpire',
   * 'RelativeToCreation', 'RelativeToNow', 'Absolute'
   */
  expiryOptions?: PathExpiryOptions;
  /**
   * The time to set the blob to expiry
   */
  expiresOn?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Additional parameters for the operation
   */
  pathHTTPHeaders?: PathHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
}

/**
 * Optional Parameters.
 */
export interface PathUpdateOptionalParams {
  /**
   * Optional. Valid only for append calls. This parameter allows the caller to flush during an
   * append call. Default value is 'false' , if 'true' the data will be flushed with the append
   * call. Note that when using flush=true, the following headers are not supported -
   * 'x-ms-cache-control', 'x-ms-content-encoding', 'x-ms-content-type', 'x-ms-content-language',
   * 'x-ms-content-md5', 'x-ms-content-disposition'. To set these headers during flush, please use
   * action=flush
   */
  flush?: boolean;
  /**
   * Optional. Valid for "SetAccessControlRecursive" operation. It specifies the maximum number of
   * files or directories on which the acl change will be applied. If omitted or greater than
   * 2,000, the request will process up to 2,000 items
   */
  maxRecords?: number;
  /**
   * Optional. The number of paths processed with each invocation is limited. If the number of
   * paths to be processed exceeds this limit, a continuation token is returned in the response
   * header x-ms-continuation. When a continuation token is  returned in the response, it must be
   * percent-encoded and specified in a subsequent invocation of setAccessControlRecursive
   * operation.
   */
  continuation?: string;
  /**
   * Optional. Valid for "SetAccessControlRecursive" operation. If set to false, the operation will
   * terminate quickly on encountering user errors (4XX). If true, the operation will ignore user
   * errors and proceed with the operation on other sub-entities of the directory. Continuation
   * token will only be returned when forceFlag is true in case of user errors. If not set the
   * default value is false for this.
   */
  forceFlag?: boolean;
  /**
   * This parameter allows the caller to upload data in parallel and control the order in which it
   * is appended to the file.  It is required when uploading data to be appended to the file and
   * when flushing previously uploaded data to the file.  The value must be the position where the
   * data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.
   * To flush, the previously uploaded data must be contiguous, the position parameter must be
   * specified and equal to the length of the file after all data has been written, and there must
   * not be a request entity body included with the request.
   */
  position?: number;
  /**
   * Valid only for flush operations.  If "true", uncommitted data is retained after the flush
   * operation completes; otherwise, the uncommitted data is deleted after the flush operation.
   * The default is false.  Data at offsets less than the specified position are written to the
   * file when flush succeeds, but this optional parameter allows data after the flush position to
   * be retained for a future flush operation.
   */
  retainUncommittedData?: boolean;
  /**
   * Azure Storage Events allow applications to receive notifications when files change. When Azure
   * Storage Events are enabled, a file changed event is raised. This event has a property
   * indicating whether this is the final change to distinguish the difference between an
   * intermediate flush to a file stream and the final close of a file stream. The close query
   * parameter is valid only when the action is "flush" and change notifications are enabled. If
   * the value of close is "true" and the flush operation completes successfully, the service
   * raises a file change notification with a property indicating that this is the final update
   * (the file stream has been closed). If "false" a change notification is raised indicating the
   * file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS
   * driver to indicate that the file stream has been closed."
   */
  close?: boolean;
  /**
   * Required for "Append Data" and "Flush Data".  Must be 0 for "Flush Data".  Must be the length
   * of the request content in bytes for "Append Data".
   */
  contentLength?: number;
  /**
   * Optional. User-defined properties to be stored with the filesystem, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.  If the filesystem exists, any properties not included in the list will be
   * removed.  All properties are removed if the header is omitted.  To merge new and existing
   * properties, first get all existing properties and the current E-Tag, then make a conditional
   * request with the E-Tag and include values for all properties.
   */
  properties?: string;
  /**
   * Optional. The owner of the blob or directory.
   */
  owner?: string;
  /**
   * Optional. The owning group of the blob or directory.
   */
  group?: string;
  /**
   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX
   * access permissions for the file owner, the file owning group, and others. Each class may be
   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic
   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.
   */
  permissions?: string;
  /**
   * Sets POSIX access control rights on files and directories. The value is a comma-separated list
   * of access control entries. Each access control entry (ACE) consists of a scope, a type, a user
   * or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".
   */
  acl?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Additional parameters for the operation
   */
  pathHTTPHeaders?: PathHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PathLeaseOptionalParams {
  /**
   * The lease duration is required to acquire a lease, and specifies the duration of the lease in
   * seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.
   */
  xMsLeaseDuration?: number;
  /**
   * The lease break period duration is optional to break a lease, and  specifies the break period
   * of the lease in seconds.  The lease break  duration must be between 0 and 60 seconds.
   */
  xMsLeaseBreakPeriod?: number;
  /**
   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if
   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list
   * of valid GUID string formats.
   */
  proposedLeaseId?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PathReadOptionalParams {
  /**
   * Optional. When this header is set to "true" and specified together with the Range header, the
   * service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB
   * in size. If this header is specified without the Range header, the service returns status code
   * 400 (Bad Request). If this header is set to true when the range exceeds 4 MB in size, the
   * service returns status code 400 (Bad Request).
   */
  xMsRangeGetContentMd5?: boolean;
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The version id parameter is an opaque DateTime value that, when present, specifies the version
   * of the blob to operate on. It's for service version 2019-10-10 and newer.
   */
  versionId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * The HTTP Range request header specifies one or more byte ranges of the resource to be
   * retrieved.
   */
  range?: string;
  /**
   * Optional. When this header is set to "true" and specified together with the Range header, the
   * service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB
   * in size. If this header is specified without the Range header, the service returns status code
   * 400 (Bad Request). If this header is set to true when the range exceeds 4 MB in size, the
   * service returns status code 400 (Bad Request).
   */
  rangeGetContentMD5?: boolean;
  /**
   * When set to true and specified together with the Range, the service returns the CRC64 hash for
   * the range, as long as the range is less than or equal to 4 MB in size.
   */
  rangeGetContentCRC64?: boolean;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
}

/**
 * Optional Parameters.
 */
export interface PathGetPropertiesOptionalParams {
  /**
   * Optional. If the value is "getStatus" only the system defined properties for the path are
   * returned. If the value is "getAccessControl" the access control list is returned in the
   * response headers (Hierarchical Namespace must be enabled for the account), otherwise the
   * properties are returned. Possible values include: 'getAccessControl', 'getStatus'
   */
  action?: PathGetPropertiesAction;
  /**
   * Optional. Valid only when Hierarchical Namespace is enabled for the account. If "true", the
   * user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers
   * will be transformed from Azure Active Directory Object IDs to User Principal Names.  If
   * "false", the values will be returned as Azure Active Directory Object IDs. The default value
   * is false. Note that group and application Object IDs are not translated because they do not
   * have unique friendly names.
   */
  upn?: boolean;
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The version id parameter is an opaque DateTime value that, when present, specifies the version
   * of the blob to operate on. It's for service version 2019-10-10 and newer.
   */
  versionId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
}

/**
 * Optional Parameters.
 */
export interface PathDeleteMethodOptionalParams {
  /**
   * Required
   */
  recursive?: boolean;
  /**
   * Optional.  When deleting a directory, the number of paths that are deleted with each
   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a
   * continuation token is returned in this response header.  When a continuation token is returned
   * in the response, it must be specified in a subsequent invocation of the delete operation to
   * continue deleting the directory.
   */
  continuation?: string;
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The version id parameter is an opaque DateTime value that, when present, specifies the version
   * of the blob to operate on. It's for service version 2019-10-10 and newer.
   */
  versionId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Required if the blob has associated snapshots. Specify one of the following two options:
   * include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots
   * and not the blob itself. Possible values include: 'include', 'only'
   */
  deleteSnapshots?: DeleteSnapshotsOptionType;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Only possible value is 'permanent', which specifies to permanently delete a blob if
   * blob soft delete is enabled. Possible values include: 'Permanent'
   */
  blobDeleteType?: BlobDeleteType;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PathSetAccessControlOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. The owner of the blob or directory.
   */
  owner?: string;
  /**
   * Optional. The owning group of the blob or directory.
   */
  group?: string;
  /**
   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX
   * access permissions for the file owner, the file owning group, and others. Each class may be
   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic
   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.
   */
  permissions?: string;
  /**
   * Sets POSIX access control rights on files and directories. The value is a comma-separated list
   * of access control entries. Each access control entry (ACE) consists of a scope, a type, a user
   * or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".
   */
  acl?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PathSetAccessControlRecursiveOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional.  When deleting a directory, the number of paths that are deleted with each
   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a
   * continuation token is returned in this response header.  When a continuation token is returned
   * in the response, it must be specified in a subsequent invocation of the delete operation to
   * continue deleting the directory.
   */
  continuation?: string;
  /**
   * Optional. Valid for "SetAccessControlRecursive" operation. If set to false, the operation will
   * terminate quickly on encountering user errors (4XX). If true, the operation will ignore user
   * errors and proceed with the operation on other sub-entities of the directory. Continuation
   * token will only be returned when forceFlag is true in case of user errors. If not set the
   * default value is false for this.
   */
  forceFlag?: boolean;
  /**
   * Optional. It specifies the maximum number of files or directories on which the acl change will
   * be applied. If omitted or greater than 2,000, the request will process up to 2,000 items
   */
  maxRecords?: number;
  /**
   * Sets POSIX access control rights on files and directories. The value is a comma-separated list
   * of access control entries. Each access control entry (ACE) consists of a scope, a type, a user
   * or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".
   */
  acl?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface PathSetPropertiesOptionalParams {
  /**
   * Optional. User-defined properties to be stored with the filesystem, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.  If the filesystem exists, any properties not included in the list will be
   * removed.  All properties are removed if the header is omitted.  To merge new and existing
   * properties, first get all existing properties and the current E-Tag, then make a conditional
   * request with the E-Tag and include values for all properties.
   */
  properties?: string;
  /**
   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX
   * access permissions for the file owner, the file owning group, and others. Each class may be
   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic
   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.
   */
  permissions?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  pathHTTPHeaders?: PathHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PathFlushDataOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * This parameter allows the caller to upload data in parallel and control the order in which it
   * is appended to the file.  It is required when uploading data to be appended to the file and
   * when flushing previously uploaded data to the file.  The value must be the position where the
   * data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.
   * To flush, the previously uploaded data must be contiguous, the position parameter must be
   * specified and equal to the length of the file after all data has been written, and there must
   * not be a request entity body included with the request.
   */
  position?: number;
  /**
   * Valid only for flush operations.  If "true", uncommitted data is retained after the flush
   * operation completes; otherwise, the uncommitted data is deleted after the flush operation.
   * The default is false.  Data at offsets less than the specified position are written to the
   * file when flush succeeds, but this optional parameter allows data after the flush position to
   * be retained for a future flush operation.
   */
  retainUncommittedData?: boolean;
  /**
   * Azure Storage Events allow applications to receive notifications when files change. When Azure
   * Storage Events are enabled, a file changed event is raised. This event has a property
   * indicating whether this is the final change to distinguish the difference between an
   * intermediate flush to a file stream and the final close of a file stream. The close query
   * parameter is valid only when the action is "flush" and change notifications are enabled. If
   * the value of close is "true" and the flush operation completes successfully, the service
   * raises a file change notification with a property indicating that this is the final update
   * (the file stream has been closed). If "false" a change notification is raised indicating the
   * file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS
   * driver to indicate that the file stream has been closed."
   */
  close?: boolean;
  /**
   * Required for "Append Data" and "Flush Data".  Must be 0 for "Flush Data".  Must be the length
   * of the request content in bytes for "Append Data".
   */
  contentLength?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if
   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list
   * of valid GUID string formats.
   */
  proposedLeaseId?: string;
  /**
   * The lease duration is required to acquire a lease, and specifies the duration of the lease in
   * seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.
   */
  xMsLeaseDuration?: number;
  /**
   * Describes what lease action to take. Possible values include: 'acquire', 'release', 'renew',
   * 'break', 'change', 'auto-renew', 'acquire-release'
   */
  leaseAction?: LeaseAction;
  /**
   * Additional parameters for the operation
   */
  pathHTTPHeaders?: PathHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
}

/**
 * Optional Parameters.
 */
export interface PathAppendDataOptionalParams {
  /**
   * This parameter allows the caller to upload data in parallel and control the order in which it
   * is appended to the file.  It is required when uploading data to be appended to the file and
   * when flushing previously uploaded data to the file.  The value must be the position where the
   * data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.
   * To flush, the previously uploaded data must be contiguous, the position parameter must be
   * specified and equal to the length of the file after all data has been written, and there must
   * not be a request entity body included with the request.
   */
  position?: number;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Required for "Append Data" and "Flush Data".  Must be 0 for "Flush Data".  Must be the length
   * of the request content in bytes for "Append Data".
   */
  contentLength?: number;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if
   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list
   * of valid GUID string formats.
   */
  proposedLeaseId?: string;
  /**
   * The lease duration is required to acquire a lease, and specifies the duration of the lease in
   * seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.
   */
  xMsLeaseDuration?: number;
  /**
   * Describes what lease action to take. Possible values include: 'acquire', 'release', 'renew',
   * 'break', 'change', 'auto-renew', 'acquire-release'
   */
  leaseAction?: LeaseAction;
  /**
   * Optional. This parameter allows the caller to flush during an append call. Default value is
   * 'false' , if 'true' the data will be flushed with the append call. Note that when using
   * flush=true, the following headers are not supported - 'x-ms-cache-control',
   * 'x-ms-content-encoding', 'x-ms-content-type', 'x-ms-content-language', 'x-ms-content-md5',
   * 'x-ms-content-disposition'. To set these headers during flush, please use action=flush
   */
  flush?: boolean;
  /**
   * Additional parameters for the operation
   */
  pathHTTPHeaders?: PathHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PathSetExpiryOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The time to set the blob to expiry
   */
  expiresOn?: string;
}

/**
 * Optional Parameters.
 */
export interface PathUndeleteOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Only for hierarchical namespace enabled accounts. Optional. The path of the soft deleted blob
   * to undelete.
   */
  undeleteSource?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ContainerCreateOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Specifies whether data in the container may be accessed publicly and the level of access.
   * Possible values include: 'container', 'blob'
   */
  access?: PublicAccessType;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  containerCpkScopeInfo?: ContainerCpkScopeInfo;
}

/**
 * Optional Parameters.
 */
export interface ContainerGetPropertiesOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerGetPropertiesWithHeadOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerDeleteMethodOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerSetMetadataOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerGetAccessPolicyOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerSetAccessPolicyOptionalParams {
  /**
   * the acls for the container
   */
  containerAcl?: SignedIdentifier[];
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specifies whether data in the container may be accessed publicly and the level of access.
   * Possible values include: 'container', 'blob'
   */
  access?: PublicAccessType;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerRestoreOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Version 2019-12-12 and later.  Specifies the name of the deleted container to
   * restore.
   */
  deletedContainerName?: string;
  /**
   * Optional.  Version 2019-12-12 and later.  Specifies the version of the deleted container to
   * restore.
   */
  deletedContainerVersion?: string;
}

/**
 * Optional Parameters.
 */
export interface ContainerSubmitBatchOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface ContainerFilterBlobsOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Filters the results to return only to return only blobs whose tags match the specified
   * expression.
   */
  where?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Include this parameter to specify one or more datasets to include in the response.
   */
  include?: FilterBlobsIncludeItem[];
}

/**
 * Optional Parameters.
 */
export interface ContainerAcquireLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never
   * expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be
   * changed using renew or change.
   */
  duration?: number;
  /**
   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if
   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list
   * of valid GUID string formats.
   */
  proposedLeaseId?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerReleaseLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerRenewLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerBreakLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * For a break operation, proposed duration the lease should continue before it is broken, in
   * seconds, between 0 and 60. This break period is only used if it is shorter than the time
   * remaining on the lease. If longer, the time remaining on the lease is used. A new lease will
   * not be available before the break period has expired, but the lease may be held for longer
   * than the break period. If this header does not appear with a break operation, a fixed-duration
   * lease breaks after the remaining lease period elapses, and an infinite lease breaks
   * immediately.
   */
  breakPeriod?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface ContainerChangeLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobCreateOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Indicates the tier to be set on the page blob. Possible values include: 'P4', 'P6',
   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80'
   */
  tier?: PremiumPageBlobAccessTier;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Set for page blobs only. The sequence number is a user-controlled value that you can use to
   * track requests. The value of the sequence number must be between 0 and 2^63 - 1. Default
   * value: 0.
   */
  blobSequenceNumber?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Specified if a legal hold should be set on the blob.
   */
  legalHold?: boolean;
  /**
   * Additional parameters for the operation
   */
  blobHTTPHeaders?: BlobHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobUploadPagesOptionalParams {
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * The HTTP Range request header specifies one or more byte ranges of the resource to be
   * retrieved.
   */
  range?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobClearPagesOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * The HTTP Range request header specifies one or more byte ranges of the resource to be
   * retrieved.
   */
  range?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobUploadPagesFromURLOptionalParams {
  /**
   * Specify the md5 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentMD5?: Uint8Array;
  /**
   * Specify the crc64 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentcrc64?: Uint8Array;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy
   * source.
   */
  copySourceAuthorization?: string;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobGetPageRangesOptionalParams {
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * The HTTP Range request header specifies one or more byte ranges of the resource to be
   * retrieved.
   */
  range?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobGetPageRangesDiffOptionalParams {
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that
   * specifies that the response will contain only pages that were changed between target blob and
   * previous snapshot. Changed pages include both updated and cleared pages. The target blob may
   * be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note
   * that incremental snapshots are currently supported only for blobs created on or after January
   * 1, 2016.
   */
  prevsnapshot?: string;
  /**
   * Optional. This header is only supported in service versions 2019-04-19 and after and specifies
   * the URL of a previous snapshot of the target blob. The response will only contain pages that
   * were changed between the target blob and its previous snapshot.
   */
  prevSnapshotUrl?: string;
  /**
   * The HTTP Range request header specifies one or more byte ranges of the resource to be
   * retrieved.
   */
  range?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * A string value that identifies the portion of the list of containers to be returned with the
   * next listing operation. The operation returns the NextMarker value within the response body if
   * the listing operation did not return all containers remaining to be listed with the current
   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent
   * call to request the next page of list items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * Specifies the maximum number of containers to return. If the request does not specify
   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.
   * Note that if the listing operation crosses a partition boundary, then the service will return
   * a continuation token for retrieving the remainder of the results. For this reason, it is
   * possible that the service will return fewer results than specified by maxresults, or than the
   * default of 5000.
   */
  maxresults?: number;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobResizeOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobUpdateSequenceNumberOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Set for page blobs only. The sequence number is a user-controlled value that you can use to
   * track requests. The value of the sequence number must be between 0 and 2^63 - 1. Default
   * value: 0.
   */
  blobSequenceNumber?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface PageBlobCopyIncrementalOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface AppendBlobCreateOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Specified if a legal hold should be set on the blob.
   */
  legalHold?: boolean;
  /**
   * Additional parameters for the operation
   */
  blobHTTPHeaders?: BlobHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface AppendBlobAppendBlockOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  appendPositionAccessConditions?: AppendPositionAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface AppendBlobAppendBlockFromUrlOptionalParams {
  /**
   * Bytes of source data in the specified range.
   */
  sourceRange?: string;
  /**
   * Specify the md5 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentMD5?: Uint8Array;
  /**
   * Specify the crc64 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentcrc64?: Uint8Array;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy
   * source.
   */
  copySourceAuthorization?: string;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  appendPositionAccessConditions?: AppendPositionAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface AppendBlobSealOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  appendPositionAccessConditions?: AppendPositionAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlockBlobUploadOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Optional. Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',
   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive',
   * 'Premium'
   */
  tier?: AccessTier;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Specified if a legal hold should be set on the blob.
   */
  legalHold?: boolean;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * Additional parameters for the operation
   */
  blobHTTPHeaders?: BlobHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlockBlobPutBlobFromUrlOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Optional. Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',
   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive',
   * 'Premium'
   */
  tier?: AccessTier;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Specify the md5 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentMD5?: Uint8Array;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Optional, default is true.  Indicates if properties from the source blob should be copied.
   */
  copySourceBlobProperties?: boolean;
  /**
   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy
   * source.
   */
  copySourceAuthorization?: string;
  /**
   * Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the
   * tags specified by x-ms-tags. Possible values include: 'REPLACE', 'COPY'
   */
  copySourceTags?: BlobCopySourceTags;
  /**
   * Additional parameters for the operation
   */
  blobHTTPHeaders?: BlobHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlockBlobStageBlockOptionalParams {
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
}

/**
 * Optional Parameters.
 */
export interface BlockBlobStageBlockFromURLOptionalParams {
  /**
   * Bytes of source data in the specified range.
   */
  sourceRange?: string;
  /**
   * Specify the md5 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentMD5?: Uint8Array;
  /**
   * Specify the crc64 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentcrc64?: Uint8Array;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy
   * source.
   */
  copySourceAuthorization?: string;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlockBlobCommitBlockListOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Optional. Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',
   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive',
   * 'Premium'
   */
  tier?: AccessTier;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Specified if a legal hold should be set on the blob.
   */
  legalHold?: boolean;
  /**
   * Additional parameters for the operation
   */
  blobHTTPHeaders?: BlobHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlockBlobGetBlockListOptionalParams {
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * Specifies whether to return the list of committed blocks, the list of uncommitted blocks, or
   * both lists together. Possible values include: 'committed', 'uncommitted', 'all'. Default
   * value: 'committed'.
   */
  listType?: BlockListType;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobUndeleteOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface BlobSetExpiryOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The time to set the blob to expiry
   */
  expiresOn?: string;
}

/**
 * Optional Parameters.
 */
export interface BlobSetHTTPHeadersOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  blobHTTPHeaders?: BlobHTTPHeaders;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobSetImmutabilityPolicyOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobDeleteImmutabilityPolicyOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface BlobSetLegalHoldOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * Optional Parameters.
 */
export interface BlobSetMetadataOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobAcquireLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never
   * expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be
   * changed using renew or change.
   */
  duration?: number;
  /**
   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if
   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list
   * of valid GUID string formats.
   */
  proposedLeaseId?: string;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobReleaseLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobRenewLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobChangeLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobBreakLeaseOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * For a break operation, proposed duration the lease should continue before it is broken, in
   * seconds, between 0 and 60. This break period is only used if it is shorter than the time
   * remaining on the lease. If longer, the time remaining on the lease is used. A new lease will
   * not be available before the break period has expired, but the lease may be held for longer
   * than the break period. If this header does not appear with a break operation, a fixed-duration
   * lease breaks after the remaining lease period elapses, and an infinite lease breaks
   * immediately.
   */
  breakPeriod?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobCreateSnapshotOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobStartCopyFromURLOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Optional. Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',
   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive',
   * 'Premium'
   */
  tier?: AccessTier;
  /**
   * Optional: Indicates the priority with which to rehydrate an archived blob. Possible values
   * include: 'High', 'Standard'
   */
  rehydratePriority?: RehydratePriority;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Overrides the sealed state of the destination blob.  Service version 2019-12-12 and newer.
   */
  sealBlob?: boolean;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Specified if a legal hold should be set on the blob.
   */
  legalHold?: boolean;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobCopyFromURLOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value
   * pairs are specified, the operation will copy the metadata from the source blob or file to the
   * destination blob. If one or more name-value pairs are specified, the destination blob is
   * created with the specified metadata, and metadata is not copied from the source blob or file.
   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules
   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more
   * information.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * Optional. Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',
   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive',
   * 'Premium'
   */
  tier?: AccessTier;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Specify the md5 calculated for the range of bytes that must be read from the copy source.
   */
  sourceContentMD5?: Uint8Array;
  /**
   * Optional.  Used to set blob tags in various blob operations.
   */
  blobTagsString?: string;
  /**
   * Specifies the date time when the blobs immutability policy is set to expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Specifies the immutability policy mode to set on the blob. Possible values include: 'Mutable',
   * 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Specified if a legal hold should be set on the blob.
   */
  legalHold?: boolean;
  /**
   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy
   * source.
   */
  copySourceAuthorization?: string;
  /**
   * Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the
   * tags specified by x-ms-tags. Possible values include: 'REPLACE', 'COPY'
   */
  copySourceTags?: BlobCopySourceTags;
  /**
   * Additional parameters for the operation
   */
  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkScopeInfo?: CpkScopeInfo;
}

/**
 * Optional Parameters.
 */
export interface BlobAbortCopyFromURLOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobSetTierOptionalParams {
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The version id parameter is an opaque DateTime value that, when present, specifies the version
   * of the blob to operate on. It's for service version 2019-10-10 and newer.
   */
  versionId?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Optional: Indicates the priority with which to rehydrate an archived blob. Possible values
   * include: 'High', 'Standard'
   */
  rehydratePriority?: RehydratePriority;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobQueryOptionalParams {
  /**
   * the query request
   */
  queryRequest?: QueryRequest;
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
  /**
   * Additional parameters for the operation
   */
  cpkInfo?: CpkInfo;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobGetTagsOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob
   * snapshot to retrieve. For more information on working with blob snapshots, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob">Creating
   * a Snapshot of a Blob.</a>
   */
  snapshot?: string;
  /**
   * The version id parameter is an opaque DateTime value that, when present, specifies the version
   * of the blob to operate on. It's for service version 2019-10-10 and newer.
   */
  versionId?: string;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Optional Parameters.
 */
export interface BlobSetTagsOptionalParams {
  /**
   * The timeout parameter is expressed in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting
   * Timeouts for Blob Service Operations.</a>
   */
  timeout?: number;
  /**
   * The version id parameter is an opaque DateTime value that, when present, specifies the version
   * of the blob to operate on. It's for service version 2019-10-10 and newer.
   */
  versionId?: string;
  /**
   * Specify the transactional md5 for the body, to be validated by the service.
   */
  transactionalContentMD5?: Uint8Array;
  /**
   * Specify the transactional crc64 for the body, to be validated by the service.
   */
  transactionalContentCrc64?: Uint8Array;
  /**
   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the
   * analytics logs when storage analytics logging is enabled.
   */
  requestId?: string;
  /**
   * Blob tags
   */
  tags?: BlobTags;
  /**
   * Additional parameters for the operation
   */
  modifiedAccessConditions?: ModifiedAccessConditions;
  /**
   * Additional parameters for the operation
   */
  leaseAccessConditions?: LeaseAccessConditions;
}

/**
 * Defines headers for ListFileSystems operation.
 */
export interface ServiceListFileSystemsHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * If the number of filesystems to be listed exceeds the maxResults limit, a continuation token
   * is returned in this response header.  When a continuation token is returned in the response,
   * it must be specified in a subsequent invocation of the list operation to continue listing the
   * filesystems.
   */
  continuation?: string;
  /**
   * The content type of list filesystem response. The default content type is application/json.
   */
  contentType?: string;
  errorCode?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface FileSystemCreateHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the FileSystem.
   */
  eTag?: string;
  /**
   * The data and time the filesystem was last modified.  Operations on files and directories do
   * not affect the last modified time.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  clientRequestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * A bool string indicates whether the namespace feature is enabled. If "true", the namespace is
   * enabled for the filesystem.
   */
  namespaceEnabled?: string;
  errorCode?: string;
}

/**
 * Defines headers for SetProperties operation.
 */
export interface FileSystemSetPropertiesHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect
   * the entity tag, but operations on files and directories do not.
   */
  eTag?: string;
  /**
   * The data and time the filesystem was last modified.  Changes to filesystem properties update
   * the last modified time, but operations on files and directories do not.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetProperties operation.
 */
export interface FileSystemGetPropertiesHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect
   * the entity tag, but operations on files and directories do not.
   */
  eTag?: string;
  /**
   * The data and time the filesystem was last modified.  Changes to filesystem properties update
   * the last modified time, but operations on files and directories do not.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * The user-defined properties associated with the filesystem.  A comma-separated list of name
   * and value pairs in the format "n1=v1, n2=v2, ...", where each value is a base64 encoded
   * string. Note that the string may only contain ASCII characters in the ISO-8859-1 character
   * set.
   */
  properties?: string;
  /**
   * A bool string indicates whether the namespace feature is enabled. If "true", the namespace is
   * enabled for the filesystem.
   */
  namespaceEnabled?: string;
  errorCode?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface FileSystemDeleteHeaders {
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ListPaths operation.
 */
export interface FileSystemListPathsHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect
   * the entity tag, but operations on files and directories do not.
   */
  eTag?: string;
  /**
   * The data and time the filesystem was last modified.  Changes to filesystem properties update
   * the last modified time, but operations on files and directories do not.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * If the number of paths to be listed exceeds the maxResults limit, a continuation token is
   * returned in this response header.  When a continuation token is returned in the response, it
   * must be specified in a subsequent invocation of the list operation to continue listing the
   * paths.
   */
  continuation?: string;
  errorCode?: string;
}

/**
 * Defines headers for ListBlobFlatSegment operation.
 */
export interface FileSystemListBlobFlatSegmentHeaders {
  /**
   * The media type of the body of the response. For List Blobs this is 'application/xml'
   */
  contentType?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ListBlobHierarchySegment operation.
 */
export interface FileSystemListBlobHierarchySegmentHeaders {
  /**
   * The media type of the body of the response. For List Blobs this is 'application/xml'
   */
  contentType?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface PathCreateHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * When renaming a directory, the number of paths that are renamed with each invocation is
   * limited.  If the number of paths to be renamed exceeds this limit, a continuation token is
   * returned in this response header.  When a continuation token is returned in the response, it
   * must be specified in a subsequent invocation of the rename operation to continue renaming the
   * directory.
   */
  continuation?: string;
  /**
   * The size of the resource in bytes.
   */
  contentLength?: number;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  errorCode?: string;
}

/**
 * Defines headers for Update operation.
 */
export interface PathUpdateHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * Indicates that the service supports requests for partial file content.
   */
  acceptRanges?: string;
  /**
   * If the Cache-Control request header has previously been set for the resource, that value is
   * returned in this header.
   */
  cacheControl?: string;
  /**
   * If the Content-Disposition request header has previously been set for the resource, that value
   * is returned in this header.
   */
  contentDisposition?: string;
  /**
   * If the Content-Encoding request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentEncoding?: string;
  /**
   * If the Content-Language request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentLanguage?: string;
  /**
   * The size of the resource in bytes.
   */
  contentLength?: number;
  /**
   * Indicates the range of bytes returned in the event that the client requested a subset of the
   * file by setting the Range request header.
   */
  contentRange?: string;
  /**
   * The content type specified for the resource. If no content type was specified, the default
   * content type is application/octet-stream.
   */
  contentType?: string;
  /**
   * An MD5 hash of the request content. This header is only returned for "Append" operation. This
   * header is returned so that the client can check for message content integrity. The value of
   * this header is computed by the service; it is not necessarily the same value specified in the
   * request headers.
   */
  contentMD5?: Uint8Array;
  /**
   * User-defined properties associated with the file or directory, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.
   */
  properties?: string;
  /**
   * When performing setAccessControlRecursive on a directory, the number of paths that are
   * processed with each invocation is limited.  If the number of paths to be processed exceeds
   * this limit, a continuation token is returned in this response header.  When a continuation
   * token is returned in the response, it must be specified in a subsequent invocation of the
   * setAccessControlRecursive operation to continue the setAccessControlRecursive operation on the
   * directory.
   */
  xMsContinuation?: string;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for Lease operation.
 */
export interface PathLeaseHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * A successful "acquire" action returns the lease ID.
   */
  leaseId?: string;
  /**
   * The time remaining in the lease period in seconds.
   */
  leaseTime?: string;
  errorCode?: string;
}

/**
 * Defines headers for Read operation.
 */
export interface PathReadHeaders {
  /**
   * Indicates that the service supports requests for partial file content.
   */
  acceptRanges?: string;
  /**
   * If the Cache-Control request header has previously been set for the resource, that value is
   * returned in this header.
   */
  cacheControl?: string;
  /**
   * If the Content-Disposition request header has previously been set for the resource, that value
   * is returned in this header.
   */
  contentDisposition?: string;
  /**
   * If the Content-Encoding request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentEncoding?: string;
  /**
   * If the Content-Language request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentLanguage?: string;
  /**
   * The size of the resource in bytes.
   */
  contentLength?: number;
  /**
   * Indicates the range of bytes returned in the event that the client requested a subset of the
   * file by setting the Range request header.
   */
  contentRange?: string;
  /**
   * The content type specified for the resource. If no content type was specified, the default
   * content type is application/octet-stream.
   */
  contentType?: string;
  /**
   * The MD5 hash of read range. If the request is to read a specified range and the
   * "x-ms-range-get-content-md5" is set to true, then the request returns an MD5 hash for the
   * range, as long as the range size is less than or equal to 4 MB.
   */
  contentMD5?: Uint8Array;
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * The type of the resource.  The value may be "file" or "directory".  If not set, the value is
   * "file".
   */
  resourceType?: string;
  /**
   * The user-defined properties associated with the file or directory, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.
   */
  properties?: string;
  /**
   * When a resource is leased, specifies whether the lease is of infinite or fixed duration.
   * Possible values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Lease state of the resource. Possible values include: 'available', 'leased', 'expired',
   * 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * The lease status of the resource. Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  metadata?: { [propertyName: string]: string };
  /**
   * Returns the date and time the blob was created.
   */
  creationTime?: Date;
  /**
   * Optional. Only valid when Object Replication is enabled for the storage container and on the
   * destination blob of the replication.
   */
  objectReplicationPolicyId?: string;
  objectReplicationRules?: { [propertyName: string]: string };
  /**
   * The current sequence number for a page blob. This header is not returned for block blobs or
   * append blobs
   */
  blobSequenceNumber?: number;
  /**
   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'
   */
  blobType?: BlobType;
  /**
   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination
   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This
   * header does not appear if a copy is pending, if this blob has never been the destination in a
   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation
   * using Set Blob Properties, Put Blob, or Put Block List.
   */
  copyCompletionTime?: Date;
  /**
   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal
   * or non-fatal copy operation failure. This header does not appear if this blob has never been
   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded
   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
   */
  copyStatusDescription?: string;
  /**
   * String identifier for this copy operation. Use with Get Blob Properties to check the status of
   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.
   */
  copyId?: string;
  /**
   * Contains the number of bytes copied and the total bytes in the source in the last attempted
   * Copy Blob operation where this blob was the destination blob. Can show between 0 and
   * Content-Length bytes copied. This header does not appear if this blob has never been the
   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy
   * Blob operation using Set Blob Properties, Put Blob, or Put Block List
   */
  copyProgress?: string;
  /**
   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted
   * Copy Blob operation where this blob was the destination blob. This header does not appear if
   * this blob has never been the destination in a Copy Blob operation, or if this blob has been
   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put
   * Block List.
   */
  copySource?: string;
  /**
   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',
   * 'success', 'aborted', 'failed'
   */
  copyStatus?: CopyStatusType;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * The value of this header indicates whether version of this blob is a current version, see also
   * x-ms-version-id header.
   */
  isCurrentVersion?: boolean;
  /**
   * The number of committed blocks present in the blob. This header is returned only for append
   * blobs.
   */
  blobCommittedBlockCount?: number;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  /**
   * If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this
   * response header is returned with the value of the whole blob's MD5 value. This value may or
   * may not be equal to the value returned in Content-MD5 header, with the latter calculated from
   * the requested range
   */
  blobContentMD5?: Uint8Array;
  /**
   * The number of tags associated with the blob
   */
  tagCount?: number;
  /**
   * If this blob has been sealed
   */
  isSealed?: boolean;
  /**
   * UTC date/time value generated by the service that indicates the time at which the blob was
   * last read or written to
   */
  lastAccessed?: Date;
  /**
   * UTC date/time value generated by the service that indicates the time at which the blob
   * immutability policy will expire.
   */
  immutabilityPolicyExpiresOn?: Date;
  /**
   * Indicates immutability policy mode.
   */
  immutabilityPolicyMode?: string;
  /**
   * Indicates if a legal hold is present on the blob.
   */
  legalHold?: boolean;
  /**
   * The MD5 hash of complete file stored in storage. If the file has a MD5 hash, and if request
   * contains range header (Range or x-ms-range), this response header is returned with the value
   * of the complete file's MD5 value. This value may or may not be equal to the value returned in
   * Content-MD5 header, with the latter calculated from the requested range.
   */
  xMsContentMd5?: Uint8Array;
  /**
   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to
   * true, then the request returns a crc64 for the range, as long as the range size is less than
   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is
   * specified in the same request, it will fail with 400(Bad Request)
   */
  contentCrc64?: Uint8Array;
  errorCode?: string;
}

/**
 * Defines headers for GetProperties operation.
 */
export interface PathGetPropertiesHeaders {
  /**
   * Indicates that the service supports requests for partial file content.
   */
  acceptRanges?: string;
  /**
   * If the Cache-Control request header has previously been set for the resource, that value is
   * returned in this header.
   */
  cacheControl?: string;
  /**
   * If the Content-Disposition request header has previously been set for the resource, that value
   * is returned in this header.
   */
  contentDisposition?: string;
  /**
   * If the Content-Encoding request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentEncoding?: string;
  /**
   * If the Content-Language request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentLanguage?: string;
  /**
   * The size of the resource in bytes.
   */
  contentLength?: number;
  /**
   * Indicates the range of bytes returned in the event that the client requested a subset of the
   * file by setting the Range request header.
   */
  contentRange?: string;
  /**
   * The content type specified for the resource. If no content type was specified, the default
   * content type is application/octet-stream.
   */
  contentType?: string;
  /**
   * The MD5 hash of complete file stored in storage. This header is returned only for
   * "GetProperties" operation. If the Content-MD5 header has been set for the file, this response
   * header is returned for GetProperties call so that the client can check for message content
   * integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * The type of the resource.  The value may be "file" or "directory".  If not set, the value is
   * "file".
   */
  resourceType?: string;
  /**
   * The user-defined properties associated with the file or directory, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.
   */
  properties?: string;
  /**
   * The owner of the file or directory. Included in the response if Hierarchical Namespace is
   * enabled for the account.
   */
  owner?: string;
  /**
   * The owning group of the file or directory. Included in the response if Hierarchical Namespace
   * is enabled for the account.
   */
  group?: string;
  /**
   * The POSIX access permissions for the file owner, the file owning group, and others. Included
   * in the response if Hierarchical Namespace is enabled for the account.
   */
  permissions?: string;
  /**
   * The POSIX access control list for the file or directory.  Included in the response only if the
   * action is "getAccessControl" and Hierarchical Namespace is enabled for the account.
   */
  aCL?: string;
  /**
   * When a resource is leased, specifies whether the lease is of infinite or fixed duration.
   * Possible values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Lease state of the resource. Possible values include: 'available', 'leased', 'expired',
   * 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * The lease status of the resource. Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  metadata?: { [propertyName: string]: string };
  /**
   * Returns the date and time the blob was created.
   */
  creationTime?: Date;
  /**
   * Optional. Only valid when Object Replication is enabled for the storage container and on the
   * destination blob of the replication.
   */
  objectReplicationPolicyId?: string;
  objectReplicationRules?: { [propertyName: string]: string };
  /**
   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'
   */
  blobType?: BlobType;
  /**
   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination
   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This
   * header does not appear if a copy is pending, if this blob has never been the destination in a
   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation
   * using Set Blob Properties, Put Blob, or Put Block List.
   */
  copyCompletionTime?: Date;
  /**
   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal
   * or non-fatal copy operation failure. This header does not appear if this blob has never been
   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded
   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
   */
  copyStatusDescription?: string;
  /**
   * String identifier for this copy operation. Use with Get Blob Properties to check the status of
   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.
   */
  copyId?: string;
  /**
   * Contains the number of bytes copied and the total bytes in the source in the last attempted
   * Copy Blob operation where this blob was the destination blob. Can show between 0 and
   * Content-Length bytes copied. This header does not appear if this blob has never been the
   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy
   * Blob operation using Set Blob Properties, Put Blob, or Put Block List
   */
  copyProgress?: string;
  /**
   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted
   * Copy Blob operation where this blob was the destination blob. This header does not appear if
   * this blob has never been the destination in a Copy Blob operation, or if this blob has been
   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put
   * Block List.
   */
  copySource?: string;
  /**
   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',
   * 'success', 'aborted', 'failed'
   */
  copyStatus?: CopyStatusType;
  /**
   * Included if the blob is incremental copy blob.
   */
  isIncrementalCopy?: boolean;
  /**
   * Included if the blob is incremental copy blob or incremental copy snapshot, if
   * x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot
   * for this blob.
   */
  destinationSnapshot?: string;
  /**
   * The current sequence number for a page blob. This header is not returned for block blobs or
   * append blobs
   */
  blobSequenceNumber?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * The number of committed blocks present in the blob. This header is returned only for append
   * blobs.
   */
  blobCommittedBlockCount?: number;
  /**
   * The value of this header is set to true if the blob data and application metadata are
   * completely encrypted using the specified algorithm. Otherwise, the value is set to false (when
   * the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only
   * returned when the metadata was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  /**
   * The tier of page blob on a premium storage account or tier of block blob on blob storage LRS
   * accounts. For a list of allowed premium page blob tiers, see
   * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage#features. For
   * blob storage LRS accounts, valid values are Hot/Cool/Archive.
   */
  accessTier?: string;
  /**
   * For page blobs on a premium storage account only. If the access tier is not explicitly set on
   * the blob, the tier is inferred based on its content length and this header will be returned
   * with true value.
   */
  accessTierInferred?: boolean;
  /**
   * For blob storage LRS accounts, valid values are
   * rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not
   * complete then this header is returned indicating that rehydrate is pending and also tells the
   * destination tier.
   */
  archiveStatus?: string;
  /**
   * The time the tier was changed on the object. This is only returned if the tier on the block
   * blob was ever set.
   */
  accessTierChangeTime?: Date;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * The value of this header indicates whether version of this blob is a current version, see also
   * x-ms-version-id header.
   */
  isCurrentVersion?: boolean;
  /**
   * The number of tags associated with the blob
   */
  tagCount?: number;
  /**
   * The time this blob will expire.
   */
  expiresOn?: Date;
  /**
   * If this blob has been sealed
   */
  isSealed?: boolean;
  /**
   * If an object is in rehydrate pending state then this header is returned with priority of
   * rehydrate. Valid values are High and Standard.
   */
  rehydratePriority?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the blob was
   * last read or written to
   */
  lastAccessed?: Date;
  /**
   * UTC date/time value generated by the service that indicates the time at which the blob
   * immutability policy will expire.
   */
  immutabilityPolicyExpiresOn?: Date;
  /**
   * Indicates immutability policy mode. Possible values include: 'Mutable', 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  /**
   * Indicates if a legal hold is present on the blob.
   */
  legalHold?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface PathDeleteHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * When deleting a directory, the number of paths that are deleted with each invocation is
   * limited.  If the number of paths to be deleted exceeds this limit, a continuation token is
   * returned in this response header.  When a continuation token is returned in the response, it
   * must be specified in a subsequent invocation of the delete operation to continue deleting the
   * directory.
   */
  continuation?: string;
  /**
   * Returned only for hierarchical namespace space enabled accounts when soft delete is enabled. A
   * unique identifier for the entity that can be used to restore it. See the Undelete REST API for
   * more information.
   */
  deletionId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  errorCode?: string;
}

/**
 * Defines headers for SetAccessControl operation.
 */
export interface PathSetAccessControlHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified. Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
}

/**
 * Defines headers for SetAccessControlRecursive operation.
 */
export interface PathSetAccessControlRecursiveHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * When performing setAccessControlRecursive on a directory, the number of paths that are
   * processed with each invocation is limited.  If the number of paths to be processed exceeds
   * this limit, a continuation token is returned in this response header.  When a continuation
   * token is returned in the response, it must be specified in a subsequent invocation of the
   * setAccessControlRecursive operation to continue the setAccessControlRecursive operation on the
   * directory.
   */
  continuation?: string;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
}

/**
 * Defines headers for SetProperties operation.
 */
export interface PathSetPropertiesHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * If the Cache-Control request header has previously been set for the resource, that value is
   * returned in this header.
   */
  cacheControl?: string;
  /**
   * If the Content-Disposition request header has previously been set for the resource, that value
   * is returned in this header.
   */
  contentDisposition?: string;
  /**
   * If the Content-Encoding request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentEncoding?: string;
  /**
   * If the Content-Language request header has previously been set for the resource, that value is
   * returned in this header.
   */
  contentLanguage?: string;
  /**
   * The size of the resource in bytes.
   */
  contentLength?: number;
  /**
   * The content type specified for the resource. If no content type was specified, the default
   * content type is application/octet-stream.
   */
  contentType?: string;
  /**
   * An MD5 hash of the request content. This header is only returned for "Flush" operation. This
   * header is returned so that the client can check for message content integrity. This header
   * refers to the content of the request, not actual file content.
   */
  contentMD5?: Uint8Array;
  /**
   * User-defined properties associated with the file or directory, in the format of a
   * comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64
   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1
   * character set.
   */
  properties?: string;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
}

/**
 * Defines headers for FlushData operation.
 */
export interface PathFlushDataHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * The data and time the file or directory was last modified.  Write operations on the file or
   * directory update the last modified time.
   */
  lastModified?: Date;
  /**
   * The size of the resource in bytes.
   */
  contentLength?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
}

/**
 * Defines headers for AppendData operation.
 */
export interface PathAppendDataHeaders {
  /**
   * A UTC date/time value generated by the service that indicates the time at which the response
   * was initiated.
   */
  date?: Date;
  /**
   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.
   */
  requestId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * The version of the REST protocol used to process the request.
   */
  version?: string;
  /**
   * An HTTP entity tag associated with the file or directory.
   */
  eTag?: string;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
}

/**
 * Defines headers for SetExpiry operation.
 */
export interface PathSetExpiryHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated.
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Undelete operation.
 */
export interface PathUndeleteHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * The type of the resource.  The value may be "file" or "directory".  If not set, the value is
   * "file".
   */
  resourceType?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated.
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetProperties operation.
 */
export interface ServiceSetPropertiesHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetProperties operation.
 */
export interface ServiceGetPropertiesHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetStatistics operation.
 */
export interface ServiceGetStatisticsHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ListContainersSegment operation.
 */
export interface ServiceListContainersSegmentHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetUserDelegationKey operation.
 */
export interface ServiceGetUserDelegationKeyHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetAccountInfo operation.
 */
export interface ServiceGetAccountInfoHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
   */
  skuName?: SkuName;
  /**
   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2',
   * 'FileStorage', 'BlockBlobStorage'
   */
  accountKind?: AccountKind;
  /**
   * Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled.
   */
  isHierarchicalNamespaceEnabled?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for GetAccountInfoWithHead operation.
 */
export interface ServiceGetAccountInfoWithHeadHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
   */
  skuName?: SkuName;
  /**
   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2',
   * 'FileStorage', 'BlockBlobStorage'
   */
  accountKind?: AccountKind;
  /**
   * Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled.
   */
  isHierarchicalNamespaceEnabled?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for SubmitBatch operation.
 */
export interface ServiceSubmitBatchHeaders {
  /**
   * The media type of the body of the response. For batch requests, this is multipart/mixed;
   * boundary=batchresponse_GUID
   */
  contentType?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for FilterBlobs operation.
 */
export interface ServiceFilterBlobsHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface ContainerCreateHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetProperties operation.
 */
export interface ContainerGetPropertiesHeaders {
  metadata?: { [propertyName: string]: string };
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible
   * values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',
   * 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Indicated whether data in the container may be accessed publicly and the level of access.
   * Possible values include: 'container', 'blob'
   */
  blobPublicAccess?: PublicAccessType;
  /**
   * Indicates whether the container has an immutability policy set on it.
   */
  hasImmutabilityPolicy?: boolean;
  /**
   * Indicates whether the container has a legal hold.
   */
  hasLegalHold?: boolean;
  /**
   * The default encryption scope for the container.
   */
  defaultEncryptionScope?: string;
  /**
   * Indicates whether the container's default encryption scope can be overriden.
   */
  denyEncryptionScopeOverride?: boolean;
  /**
   * Indicates whether version level worm is enabled on a container.
   */
  isImmutableStorageWithVersioningEnabled?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for GetPropertiesWithHead operation.
 */
export interface ContainerGetPropertiesWithHeadHeaders {
  metadata?: { [propertyName: string]: string };
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible
   * values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',
   * 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Indicated whether data in the container may be accessed publicly and the level of access.
   * Possible values include: 'container', 'blob'
   */
  blobPublicAccess?: PublicAccessType;
  /**
   * Indicates whether the container has an immutability policy set on it.
   */
  hasImmutabilityPolicy?: boolean;
  /**
   * Indicates whether the container has a legal hold.
   */
  hasLegalHold?: boolean;
  /**
   * The default encryption scope for the container.
   */
  defaultEncryptionScope?: string;
  /**
   * Indicates whether the container's default encryption scope can be overriden.
   */
  denyEncryptionScopeOverride?: boolean;
  /**
   * Indicates whether version level worm is enabled on a container.
   */
  isImmutableStorageWithVersioningEnabled?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface ContainerDeleteHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetMetadata operation.
 */
export interface ContainerSetMetadataHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetAccessPolicy operation.
 */
export interface ContainerGetAccessPolicyHeaders {
  /**
   * Indicated whether data in the container may be accessed publicly and the level of access.
   * Possible values include: 'container', 'blob'
   */
  blobPublicAccess?: PublicAccessType;
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetAccessPolicy operation.
 */
export interface ContainerSetAccessPolicyHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Restore operation.
 */
export interface ContainerRestoreHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SubmitBatch operation.
 */
export interface ContainerSubmitBatchHeaders {
  /**
   * The media type of the body of the response. For batch requests, this is multipart/mixed;
   * boundary=batchresponse_GUID
   */
  contentType?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for FilterBlobs operation.
 */
export interface ContainerFilterBlobsHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for AcquireLease operation.
 */
export interface ContainerAcquireLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * Uniquely identifies a container's lease
   */
  leaseId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ReleaseLease operation.
 */
export interface ContainerReleaseLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for RenewLease operation.
 */
export interface ContainerRenewLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * Uniquely identifies a container's lease
   */
  leaseId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for BreakLease operation.
 */
export interface ContainerBreakLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * Approximate time remaining in the lease period, in seconds.
   */
  leaseTime?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ChangeLease operation.
 */
export interface ContainerChangeLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * Uniquely identifies a container's lease
   */
  leaseId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetAccountInfo operation.
 */
export interface ContainerGetAccountInfoHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
   */
  skuName?: SkuName;
  /**
   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2',
   * 'FileStorage', 'BlockBlobStorage'
   */
  accountKind?: AccountKind;
  errorCode?: string;
}

/**
 * Defines headers for GetAccountInfoWithHead operation.
 */
export interface ContainerGetAccountInfoWithHeadHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
   */
  skuName?: SkuName;
  /**
   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2',
   * 'FileStorage', 'BlockBlobStorage'
   */
  accountKind?: AccountKind;
  errorCode?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface PageBlobCreateHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface AppendBlobCreateHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for Upload operation.
 */
export interface BlockBlobUploadHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for PutBlobFromUrl operation.
 */
export interface BlockBlobPutBlobFromUrlHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for Undelete operation.
 */
export interface BlobUndeleteHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated.
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetExpiry operation.
 */
export interface BlobSetExpiryHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated.
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetHTTPHeaders operation.
 */
export interface BlobSetHTTPHeadersHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * The current sequence number for a page blob. This header is not returned for block blobs or
   * append blobs
   */
  blobSequenceNumber?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetImmutabilityPolicy operation.
 */
export interface BlobSetImmutabilityPolicyHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Indicates the time the immutability policy will expire.
   */
  immutabilityPolicyExpiry?: Date;
  /**
   * Indicates immutability policy mode. Possible values include: 'Mutable', 'Unlocked', 'Locked'
   */
  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;
  errorCode?: string;
}

/**
 * Defines headers for DeleteImmutabilityPolicy operation.
 */
export interface BlobDeleteImmutabilityPolicyHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetLegalHold operation.
 */
export interface BlobSetLegalHoldHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Indicates if the blob has a legal hold.
   */
  legalHold?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for SetMetadata operation.
 */
export interface BlobSetMetadataHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only
   * returned when the metadata was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for AcquireLease operation.
 */
export interface BlobAcquireLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the blob was last modified. Any operation that modifies the blob,
   * including an update of the blob's metadata or properties, changes the last-modified time of
   * the blob.
   */
  lastModified?: Date;
  /**
   * Uniquely identifies a blobs' lease
   */
  leaseId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ReleaseLease operation.
 */
export interface BlobReleaseLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the blob was last modified. Any operation that modifies the blob,
   * including an update of the blob's metadata or properties, changes the last-modified time of
   * the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for RenewLease operation.
 */
export interface BlobRenewLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the blob was last modified. Any operation that modifies the blob,
   * including an update of the blob's metadata or properties, changes the last-modified time of
   * the blob.
   */
  lastModified?: Date;
  /**
   * Uniquely identifies a blobs' lease
   */
  leaseId?: string;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for ChangeLease operation.
 */
export interface BlobChangeLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the blob was last modified. Any operation that modifies the blob,
   * including an update of the blob's metadata or properties, changes the last-modified time of
   * the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Uniquely identifies a blobs' lease
   */
  leaseId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for BreakLease operation.
 */
export interface BlobBreakLeaseHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the blob was last modified. Any operation that modifies the blob,
   * including an update of the blob's metadata or properties, changes the last-modified time of
   * the blob.
   */
  lastModified?: Date;
  /**
   * Approximate time remaining in the lease period, in seconds.
   */
  leaseTime?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for CreateSnapshot operation.
 */
export interface BlobCreateSnapshotHeaders {
  /**
   * Uniquely identifies the snapshot and indicates the snapshot version. It may be used in
   * subsequent requests to access the snapshot
   */
  snapshot?: string;
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * True if the contents of the request are successfully encrypted using the specified algorithm,
   * and false otherwise. For a snapshot request, this header is set to true when metadata was
   * provided in the request and encrypted with a customer-provided key.
   */
  isServerEncrypted?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for StartCopyFromURL operation.
 */
export interface BlobStartCopyFromURLHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * String identifier for this copy operation. Use with Get Blob Properties to check the status of
   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.
   */
  copyId?: string;
  /**
   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',
   * 'success', 'aborted', 'failed'
   */
  copyStatus?: CopyStatusType;
  errorCode?: string;
}

/**
 * Defines headers for CopyFromURL operation.
 */
export interface BlobCopyFromURLHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * String identifier for this copy operation.
   */
  copyId?: string;
  /**
   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'success'
   */
  copyStatus?: SyncCopyStatusType;
  /**
   * This response header is returned so that the client can check for the integrity of the copied
   * content. This header is only returned if the source content MD5 was specified.
   */
  contentMD5?: Uint8Array;
  /**
   * This response header is returned so that the client can check for the integrity of the copied
   * content.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for AbortCopyFromURL operation.
 */
export interface BlobAbortCopyFromURLHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetTier operation.
 */
export interface BlobSetTierHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and newer.
   */
  version?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetAccountInfo operation.
 */
export interface BlobGetAccountInfoHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
   */
  skuName?: SkuName;
  /**
   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2',
   * 'FileStorage', 'BlockBlobStorage'
   */
  accountKind?: AccountKind;
  errorCode?: string;
}

/**
 * Defines headers for GetAccountInfoWithHead operation.
 */
export interface BlobGetAccountInfoWithHeadHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
   */
  skuName?: SkuName;
  /**
   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2',
   * 'FileStorage', 'BlockBlobStorage'
   */
  accountKind?: AccountKind;
  errorCode?: string;
}

/**
 * Defines headers for StageBlock operation.
 */
export interface BlockBlobStageBlockHeaders {
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  contentMD5?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned
   * when the block was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for StageBlockFromURL operation.
 */
export interface BlockBlobStageBlockFromURLHeaders {
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned
   * when the block was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for CommitBlockList operation.
 */
export interface BlockBlobCommitBlockListHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * This header is returned so that the client can check for message content integrity. This
   * header refers to the content of the request, meaning, in this case, the list of blocks, and
   * not the content of the blob itself.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. This
   * header refers to the content of the request, meaning, in this case, the list of blocks, and
   * not the content of the blob itself.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * A DateTime value returned by the service that uniquely identifies the blob. The value of this
   * header indicates the blob version, and may be used in subsequent requests to access this
   * version of the blob.
   */
  versionId?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetBlockList operation.
 */
export interface BlockBlobGetBlockListHeaders {
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * The media type of the body of the response. For Get Block List this is 'application/xml'
   */
  contentType?: string;
  /**
   * The size of the blob in bytes.
   */
  blobContentLength?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for UploadPages operation.
 */
export interface PageBlobUploadPagesHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * The current sequence number for the page blob.
   */
  blobSequenceNumber?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the pages. This header is only returned
   * when the pages were encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for ClearPages operation.
 */
export interface PageBlobClearPagesHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * The current sequence number for the page blob.
   */
  blobSequenceNumber?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for UploadPagesFromURL operation.
 */
export interface PageBlobUploadPagesFromURLHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * The current sequence number for the page blob.
   */
  blobSequenceNumber?: number;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for GetPageRanges operation.
 */
export interface PageBlobGetPageRangesHeaders {
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * The size of the blob in bytes.
   */
  blobContentLength?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for GetPageRangesDiff operation.
 */
export interface PageBlobGetPageRangesDiffHeaders {
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * The size of the blob in bytes.
   */
  blobContentLength?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for Resize operation.
 */
export interface PageBlobResizeHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * The current sequence number for a page blob. This header is not returned for block blobs or
   * append blobs
   */
  blobSequenceNumber?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for UpdateSequenceNumber operation.
 */
export interface PageBlobUpdateSequenceNumberHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * The current sequence number for a page blob. This header is not returned for block blobs or
   * append blobs
   */
  blobSequenceNumber?: number;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for CopyIncremental operation.
 */
export interface PageBlobCopyIncrementalHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * String identifier for this copy operation. Use with Get Blob Properties to check the status of
   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.
   */
  copyId?: string;
  /**
   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',
   * 'success', 'aborted', 'failed'
   */
  copyStatus?: CopyStatusType;
  errorCode?: string;
}

/**
 * Defines headers for AppendBlock operation.
 */
export interface AppendBlobAppendBlockHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * This response header is returned only for append operations. It returns the offset at which
   * the block was committed, in bytes.
   */
  blobAppendOffset?: string;
  /**
   * The number of committed blocks present in the blob. This header is returned only for append
   * blobs.
   */
  blobCommittedBlockCount?: number;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned
   * when the block was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  errorCode?: string;
}

/**
 * Defines headers for AppendBlockFromUrl operation.
 */
export interface AppendBlobAppendBlockFromUrlHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header is returned so that the client can check for message content integrity. The value
   * of this header is computed by the Blob service; it is not necessarily the same value specified
   * in the request headers.
   */
  xMsContentCrc64?: Uint8Array;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * This response header is returned only for append operations. It returns the offset at which
   * the block was committed, in bytes.
   */
  blobAppendOffset?: string;
  /**
   * The number of committed blocks present in the blob. This header is returned only for append
   * blobs.
   */
  blobCommittedBlockCount?: number;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned
   * when the block was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  /**
   * The value of this header is set to true if the contents of the request are successfully
   * encrypted using the specified algorithm, and false otherwise.
   */
  isServerEncrypted?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for Seal operation.
 */
export interface AppendBlobSealHeaders {
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * If this blob has been sealed
   */
  isSealed?: boolean;
  errorCode?: string;
}

/**
 * Defines headers for Query operation.
 */
export interface BlobQueryHeaders {
  /**
   * Returns the date and time the container was last modified. Any operation that modifies the
   * blob, including an update of the blob's metadata or properties, changes the last-modified time
   * of the blob.
   */
  lastModified?: Date;
  metadata?: { [propertyName: string]: string };
  /**
   * The number of bytes present in the response body.
   */
  contentLength?: number;
  /**
   * The media type of the body of the response. For Download Blob this is
   * 'application/octet-stream'
   */
  contentType?: string;
  /**
   * Indicates the range of bytes returned in the event that the client requested a subset of the
   * blob by setting the 'Range' request header.
   */
  contentRange?: string;
  /**
   * The ETag contains a value that you can use to perform operations conditionally. If the request
   * version is 2011-08-18 or newer, the ETag value will be in quotes.
   */
  eTag?: string;
  /**
   * If the blob has an MD5 hash and this operation is to read the full blob, this response header
   * is returned so that the client can check for message content integrity.
   */
  contentMD5?: Uint8Array;
  /**
   * This header returns the value that was specified for the Content-Encoding request header
   */
  contentEncoding?: string;
  /**
   * This header is returned if it was previously specified for the blob.
   */
  cacheControl?: string;
  /**
   * This header returns the value that was specified for the 'x-ms-blob-content-disposition'
   * header. The Content-Disposition response header field conveys additional information about how
   * to process the response payload, and also can be used to attach additional metadata. For
   * example, if set to attachment, it indicates that the user-agent should not display the
   * response, but instead show a Save As dialog with a filename other than the blob name
   * specified.
   */
  contentDisposition?: string;
  /**
   * This header returns the value that was specified for the Content-Language request header.
   */
  contentLanguage?: string;
  /**
   * The current sequence number for a page blob. This header is not returned for block blobs or
   * append blobs
   */
  blobSequenceNumber?: number;
  /**
   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'
   */
  blobType?: BlobType;
  /**
   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination
   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This
   * header does not appear if a copy is pending, if this blob has never been the destination in a
   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation
   * using Set Blob Properties, Put Blob, or Put Block List.
   */
  copyCompletionTime?: Date;
  /**
   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal
   * or non-fatal copy operation failure. This header does not appear if this blob has never been
   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded
   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List
   */
  copyStatusDescription?: string;
  /**
   * String identifier for this copy operation. Use with Get Blob Properties to check the status of
   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.
   */
  copyId?: string;
  /**
   * Contains the number of bytes copied and the total bytes in the source in the last attempted
   * Copy Blob operation where this blob was the destination blob. Can show between 0 and
   * Content-Length bytes copied. This header does not appear if this blob has never been the
   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy
   * Blob operation using Set Blob Properties, Put Blob, or Put Block List
   */
  copyProgress?: string;
  /**
   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted
   * Copy Blob operation where this blob was the destination blob. This header does not appear if
   * this blob has never been the destination in a Copy Blob operation, or if this blob has been
   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put
   * Block List.
   */
  copySource?: string;
  /**
   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',
   * 'success', 'aborted', 'failed'
   */
  copyStatus?: CopyStatusType;
  /**
   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible
   * values include: 'infinite', 'fixed'
   */
  leaseDuration?: LeaseDurationType;
  /**
   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',
   * 'breaking', 'broken'
   */
  leaseState?: LeaseStateType;
  /**
   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'
   */
  leaseStatus?: LeaseStatusType;
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * Indicates that the service supports requests for partial blob content.
   */
  acceptRanges?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  /**
   * The number of committed blocks present in the blob. This header is returned only for append
   * blobs.
   */
  blobCommittedBlockCount?: number;
  /**
   * The value of this header is set to true if the blob data and application metadata are
   * completely encrypted using the specified algorithm. Otherwise, the value is set to false (when
   * the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).
   */
  isServerEncrypted?: boolean;
  /**
   * The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned
   * when the blob was encrypted with a customer-provided key.
   */
  encryptionKeySha256?: string;
  /**
   * Returns the name of the encryption scope used to encrypt the blob contents and application
   * metadata.  Note that the absence of this header implies use of the default account encryption
   * scope.
   */
  encryptionScope?: string;
  /**
   * If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this
   * response header is returned with the value of the whole blob's MD5 value. This value may or
   * may not be equal to the value returned in Content-MD5 header, with the latter calculated from
   * the requested range
   */
  blobContentMD5?: Uint8Array;
  /**
   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to
   * true, then the request returns a crc64 for the range, as long as the range size is less than
   * or equal to 4 MB. If both x-ms-range-get-content-crc64 and x-ms-range-get-content-md5 is
   * specified in the same request, it will fail with 400(Bad Request)
   */
  contentCrc64?: Uint8Array;
  errorCode?: string;
}

/**
 * Defines headers for GetTags operation.
 */
export interface BlobGetTagsHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines headers for SetTags operation.
 */
export interface BlobSetTagsHeaders {
  /**
   * If a client request id header is sent in the request, this header will be present in the
   * response with the same value.
   */
  clientRequestId?: string;
  /**
   * This header uniquely identifies the request that was made and can be used for troubleshooting
   * the request.
   */
  requestId?: string;
  /**
   * Indicates the version of the Blob service used to execute the request. This header is returned
   * for requests made against version 2009-09-19 and above.
   */
  version?: string;
  /**
   * UTC date/time value generated by the service that indicates the time at which the response was
   * initiated
   */
  date?: Date;
  errorCode?: string;
}

/**
 * Defines values for BlobType.
 * Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'
 * @readonly
 * @enum {string}
 */
export enum BlobType {
  BlockBlob = 'BlockBlob',
  PageBlob = 'PageBlob',
  AppendBlob = 'AppendBlob',
}

/**
 * Defines values for LeaseStatusType.
 * Possible values include: 'locked', 'unlocked'
 * @readonly
 * @enum {string}
 */
export enum LeaseStatusType {
  Locked = 'locked',
  Unlocked = 'unlocked',
}

/**
 * Defines values for LeaseStateType.
 * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'
 * @readonly
 * @enum {string}
 */
export enum LeaseStateType {
  Available = 'available',
  Leased = 'leased',
  Expired = 'expired',
  Breaking = 'breaking',
  Broken = 'broken',
}

/**
 * Defines values for LeaseDurationType.
 * Possible values include: 'infinite', 'fixed'
 * @readonly
 * @enum {string}
 */
export enum LeaseDurationType {
  Infinite = 'infinite',
  Fixed = 'fixed',
}

/**
 * Defines values for CopyStatusType.
 * Possible values include: 'pending', 'success', 'aborted', 'failed'
 * @readonly
 * @enum {string}
 */
export enum CopyStatusType {
  Pending = 'pending',
  Success = 'success',
  Aborted = 'aborted',
  Failed = 'failed',
}

/**
 * Defines values for AccessTier.
 * Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70',
 * 'P80', 'Hot', 'Cool', 'Archive', 'Premium'
 * @readonly
 * @enum {string}
 */
export enum AccessTier {
  P4 = 'P4',
  P6 = 'P6',
  P10 = 'P10',
  P15 = 'P15',
  P20 = 'P20',
  P30 = 'P30',
  P40 = 'P40',
  P50 = 'P50',
  P60 = 'P60',
  P70 = 'P70',
  P80 = 'P80',
  Hot = 'Hot',
  Cool = 'Cool',
  Archive = 'Archive',
  Premium = 'Premium',
}

/**
 * Defines values for ArchiveStatus.
 * Possible values include: 'rehydrate-pending-to-hot', 'rehydrate-pending-to-cool'
 * @readonly
 * @enum {string}
 */
export enum ArchiveStatus {
  RehydratePendingToHot = 'rehydrate-pending-to-hot',
  RehydratePendingToCool = 'rehydrate-pending-to-cool',
}

/**
 * Defines values for RehydratePriority.
 * Possible values include: 'High', 'Standard'
 * @readonly
 * @enum {string}
 */
export enum RehydratePriority {
  High = 'High',
  Standard = 'Standard',
}

/**
 * Defines values for BlobImmutabilityPolicyMode.
 * Possible values include: 'Mutable', 'Unlocked', 'Locked'
 * @readonly
 * @enum {string}
 */
export enum BlobImmutabilityPolicyMode {
  Mutable = 'Mutable',
  Unlocked = 'Unlocked',
  Locked = 'Locked',
}

/**
 * Defines values for PublicAccessType.
 * Possible values include: 'container', 'blob'
 * @readonly
 * @enum {string}
 */
export enum PublicAccessType {
  Container = 'container',
  Blob = 'blob',
}

/**
 * Defines values for StorageErrorCode.
 * Possible values include: 'AccountAlreadyExists', 'AccountBeingCreated', 'AccountIsDisabled',
 * 'AuthenticationFailed', 'AuthorizationFailure', 'ConditionHeadersNotSupported',
 * 'ConditionNotMet', 'EmptyMetadataKey', 'InsufficientAccountPermissions', 'InternalError',
 * 'InvalidAuthenticationInfo', 'InvalidHeaderValue', 'InvalidHttpVerb', 'InvalidInput',
 * 'InvalidMd5', 'InvalidMetadata', 'InvalidQueryParameterValue', 'InvalidRange',
 * 'InvalidResourceName', 'InvalidUri', 'InvalidXmlDocument', 'InvalidXmlNodeValue', 'Md5Mismatch',
 * 'MetadataTooLarge', 'MissingContentLengthHeader', 'MissingRequiredQueryParameter',
 * 'MissingRequiredHeader', 'MissingRequiredXmlNode', 'MultipleConditionHeadersNotSupported',
 * 'OperationTimedOut', 'OutOfRangeInput', 'OutOfRangeQueryParameterValue', 'RequestBodyTooLarge',
 * 'ResourceTypeMismatch', 'RequestUrlFailedToParse', 'ResourceAlreadyExists', 'ResourceNotFound',
 * 'ServerBusy', 'UnsupportedHeader', 'UnsupportedXmlNode', 'UnsupportedQueryParameter',
 * 'UnsupportedHttpVerb', 'AppendPositionConditionNotMet', 'BlobAlreadyExists',
 * 'BlobImmutableDueToPolicy', 'BlobNotFound', 'BlobOverwritten',
 * 'BlobTierInadequateForContentLength', 'BlobUsesCustomerSpecifiedEncryption',
 * 'BlockCountExceedsLimit', 'BlockListTooLong', 'CannotChangeToLowerTier',
 * 'CannotVerifyCopySource', 'ContainerAlreadyExists', 'ContainerBeingDeleted',
 * 'ContainerDisabled', 'ContainerNotFound', 'ContentLengthLargerThanTierLimit',
 * 'CopyAcrossAccountsNotSupported', 'CopyIdMismatch', 'FeatureVersionMismatch',
 * 'IncrementalCopyBlobMismatch', 'IncrementalCopyOfEarlierVersionSnapshotNotAllowed',
 * 'IncrementalCopySourceMustBeSnapshot', 'InfiniteLeaseDurationRequired', 'InvalidBlobOrBlock',
 * 'InvalidBlobTier', 'InvalidBlobType', 'InvalidBlockId', 'InvalidBlockList', 'InvalidOperation',
 * 'InvalidPageRange', 'InvalidSourceBlobType', 'InvalidSourceBlobUrl',
 * 'InvalidVersionForPageBlobOperation', 'LeaseAlreadyPresent', 'LeaseAlreadyBroken',
 * 'LeaseIdMismatchWithBlobOperation', 'LeaseIdMismatchWithContainerOperation',
 * 'LeaseIdMismatchWithLeaseOperation', 'LeaseIdMissing', 'LeaseIsBreakingAndCannotBeAcquired',
 * 'LeaseIsBreakingAndCannotBeChanged', 'LeaseIsBrokenAndCannotBeRenewed', 'LeaseLost',
 * 'LeaseNotPresentWithBlobOperation', 'LeaseNotPresentWithContainerOperation',
 * 'LeaseNotPresentWithLeaseOperation', 'MaxBlobSizeConditionNotMet',
 * 'NoAuthenticationInformation', 'NoPendingCopyOperation',
 * 'OperationNotAllowedOnIncrementalCopyBlob', 'PendingCopyOperation',
 * 'PreviousSnapshotCannotBeNewer', 'PreviousSnapshotNotFound',
 * 'PreviousSnapshotOperationNotSupported', 'SequenceNumberConditionNotMet',
 * 'SequenceNumberIncrementTooLarge', 'SnapshotCountExceeded', 'SnapshotOperationRateExceeded',
 * 'SnapshotsPresent', 'SourceConditionNotMet', 'SystemInUse', 'TargetConditionNotMet',
 * 'UnauthorizedBlobOverwrite', 'BlobBeingRehydrated', 'BlobArchived', 'BlobNotArchived',
 * 'AuthorizationSourceIPMismatch', 'AuthorizationProtocolMismatch',
 * 'AuthorizationPermissionMismatch', 'AuthorizationServiceMismatch',
 * 'AuthorizationResourceTypeMismatch'
 * @readonly
 * @enum {string}
 */
export enum StorageErrorCode {
  AccountAlreadyExists = 'AccountAlreadyExists',
  AccountBeingCreated = 'AccountBeingCreated',
  AccountIsDisabled = 'AccountIsDisabled',
  AuthenticationFailed = 'AuthenticationFailed',
  AuthorizationFailure = 'AuthorizationFailure',
  ConditionHeadersNotSupported = 'ConditionHeadersNotSupported',
  ConditionNotMet = 'ConditionNotMet',
  EmptyMetadataKey = 'EmptyMetadataKey',
  InsufficientAccountPermissions = 'InsufficientAccountPermissions',
  InternalError = 'InternalError',
  InvalidAuthenticationInfo = 'InvalidAuthenticationInfo',
  InvalidHeaderValue = 'InvalidHeaderValue',
  InvalidHttpVerb = 'InvalidHttpVerb',
  InvalidInput = 'InvalidInput',
  InvalidMd5 = 'InvalidMd5',
  InvalidMetadata = 'InvalidMetadata',
  InvalidQueryParameterValue = 'InvalidQueryParameterValue',
  InvalidRange = 'InvalidRange',
  InvalidResourceName = 'InvalidResourceName',
  InvalidUri = 'InvalidUri',
  InvalidXmlDocument = 'InvalidXmlDocument',
  InvalidXmlNodeValue = 'InvalidXmlNodeValue',
  Md5Mismatch = 'Md5Mismatch',
  MetadataTooLarge = 'MetadataTooLarge',
  MissingContentLengthHeader = 'MissingContentLengthHeader',
  MissingRequiredQueryParameter = 'MissingRequiredQueryParameter',
  MissingRequiredHeader = 'MissingRequiredHeader',
  MissingRequiredXmlNode = 'MissingRequiredXmlNode',
  MultipleConditionHeadersNotSupported = 'MultipleConditionHeadersNotSupported',
  OperationTimedOut = 'OperationTimedOut',
  OutOfRangeInput = 'OutOfRangeInput',
  OutOfRangeQueryParameterValue = 'OutOfRangeQueryParameterValue',
  RequestBodyTooLarge = 'RequestBodyTooLarge',
  ResourceTypeMismatch = 'ResourceTypeMismatch',
  RequestUrlFailedToParse = 'RequestUrlFailedToParse',
  ResourceAlreadyExists = 'ResourceAlreadyExists',
  ResourceNotFound = 'ResourceNotFound',
  ServerBusy = 'ServerBusy',
  UnsupportedHeader = 'UnsupportedHeader',
  UnsupportedXmlNode = 'UnsupportedXmlNode',
  UnsupportedQueryParameter = 'UnsupportedQueryParameter',
  UnsupportedHttpVerb = 'UnsupportedHttpVerb',
  AppendPositionConditionNotMet = 'AppendPositionConditionNotMet',
  BlobAlreadyExists = 'BlobAlreadyExists',
  BlobImmutableDueToPolicy = 'BlobImmutableDueToPolicy',
  BlobNotFound = 'BlobNotFound',
  BlobOverwritten = 'BlobOverwritten',
  BlobTierInadequateForContentLength = 'BlobTierInadequateForContentLength',
  BlobUsesCustomerSpecifiedEncryption = 'BlobUsesCustomerSpecifiedEncryption',
  BlockCountExceedsLimit = 'BlockCountExceedsLimit',
  BlockListTooLong = 'BlockListTooLong',
  CannotChangeToLowerTier = 'CannotChangeToLowerTier',
  CannotVerifyCopySource = 'CannotVerifyCopySource',
  ContainerAlreadyExists = 'ContainerAlreadyExists',
  ContainerBeingDeleted = 'ContainerBeingDeleted',
  ContainerDisabled = 'ContainerDisabled',
  ContainerNotFound = 'ContainerNotFound',
  ContentLengthLargerThanTierLimit = 'ContentLengthLargerThanTierLimit',
  CopyAcrossAccountsNotSupported = 'CopyAcrossAccountsNotSupported',
  CopyIdMismatch = 'CopyIdMismatch',
  FeatureVersionMismatch = 'FeatureVersionMismatch',
  IncrementalCopyBlobMismatch = 'IncrementalCopyBlobMismatch',
  IncrementalCopyOfEarlierVersionSnapshotNotAllowed = 'IncrementalCopyOfEarlierVersionSnapshotNotAllowed',
  IncrementalCopySourceMustBeSnapshot = 'IncrementalCopySourceMustBeSnapshot',
  InfiniteLeaseDurationRequired = 'InfiniteLeaseDurationRequired',
  InvalidBlobOrBlock = 'InvalidBlobOrBlock',
  InvalidBlobTier = 'InvalidBlobTier',
  InvalidBlobType = 'InvalidBlobType',
  InvalidBlockId = 'InvalidBlockId',
  InvalidBlockList = 'InvalidBlockList',
  InvalidOperation = 'InvalidOperation',
  InvalidPageRange = 'InvalidPageRange',
  InvalidSourceBlobType = 'InvalidSourceBlobType',
  InvalidSourceBlobUrl = 'InvalidSourceBlobUrl',
  InvalidVersionForPageBlobOperation = 'InvalidVersionForPageBlobOperation',
  LeaseAlreadyPresent = 'LeaseAlreadyPresent',
  LeaseAlreadyBroken = 'LeaseAlreadyBroken',
  LeaseIdMismatchWithBlobOperation = 'LeaseIdMismatchWithBlobOperation',
  LeaseIdMismatchWithContainerOperation = 'LeaseIdMismatchWithContainerOperation',
  LeaseIdMismatchWithLeaseOperation = 'LeaseIdMismatchWithLeaseOperation',
  LeaseIdMissing = 'LeaseIdMissing',
  LeaseIsBreakingAndCannotBeAcquired = 'LeaseIsBreakingAndCannotBeAcquired',
  LeaseIsBreakingAndCannotBeChanged = 'LeaseIsBreakingAndCannotBeChanged',
  LeaseIsBrokenAndCannotBeRenewed = 'LeaseIsBrokenAndCannotBeRenewed',
  LeaseLost = 'LeaseLost',
  LeaseNotPresentWithBlobOperation = 'LeaseNotPresentWithBlobOperation',
  LeaseNotPresentWithContainerOperation = 'LeaseNotPresentWithContainerOperation',
  LeaseNotPresentWithLeaseOperation = 'LeaseNotPresentWithLeaseOperation',
  MaxBlobSizeConditionNotMet = 'MaxBlobSizeConditionNotMet',
  NoAuthenticationInformation = 'NoAuthenticationInformation',
  NoPendingCopyOperation = 'NoPendingCopyOperation',
  OperationNotAllowedOnIncrementalCopyBlob = 'OperationNotAllowedOnIncrementalCopyBlob',
  PendingCopyOperation = 'PendingCopyOperation',
  PreviousSnapshotCannotBeNewer = 'PreviousSnapshotCannotBeNewer',
  PreviousSnapshotNotFound = 'PreviousSnapshotNotFound',
  PreviousSnapshotOperationNotSupported = 'PreviousSnapshotOperationNotSupported',
  SequenceNumberConditionNotMet = 'SequenceNumberConditionNotMet',
  SequenceNumberIncrementTooLarge = 'SequenceNumberIncrementTooLarge',
  SnapshotCountExceeded = 'SnapshotCountExceeded',
  SnapshotOperationRateExceeded = 'SnapshotOperationRateExceeded',
  SnapshotsPresent = 'SnapshotsPresent',
  SourceConditionNotMet = 'SourceConditionNotMet',
  SystemInUse = 'SystemInUse',
  TargetConditionNotMet = 'TargetConditionNotMet',
  UnauthorizedBlobOverwrite = 'UnauthorizedBlobOverwrite',
  BlobBeingRehydrated = 'BlobBeingRehydrated',
  BlobArchived = 'BlobArchived',
  BlobNotArchived = 'BlobNotArchived',
  AuthorizationSourceIPMismatch = 'AuthorizationSourceIPMismatch',
  AuthorizationProtocolMismatch = 'AuthorizationProtocolMismatch',
  AuthorizationPermissionMismatch = 'AuthorizationPermissionMismatch',
  AuthorizationServiceMismatch = 'AuthorizationServiceMismatch',
  AuthorizationResourceTypeMismatch = 'AuthorizationResourceTypeMismatch',
}

/**
 * Defines values for GeoReplicationStatusType.
 * Possible values include: 'live', 'bootstrap', 'unavailable'
 * @readonly
 * @enum {string}
 */
export enum GeoReplicationStatusType {
  Live = 'live',
  Bootstrap = 'bootstrap',
  Unavailable = 'unavailable',
}

/**
 * Defines values for QueryFormatType.
 * Possible values include: 'delimited', 'json', 'arrow', 'parquet'
 * @readonly
 * @enum {string}
 */
export enum QueryFormatType {
  Delimited = 'delimited',
  Json = 'json',
  Arrow = 'arrow',
  Parquet = 'parquet',
}

/**
 * Defines values for DeleteSnapshotsOptionType.
 * Possible values include: 'include', 'only'
 * @readonly
 * @enum {string}
 */
export enum DeleteSnapshotsOptionType {
  Include = 'include',
  Only = 'only',
}

/**
 * Defines values for BlobDeleteType.
 * Possible values include: 'Permanent'
 * @readonly
 * @enum {string}
 */
export enum BlobDeleteType {
  Permanent = 'Permanent',
}

/**
 * Defines values for PathSetAccessControlRecursiveMode.
 * Possible values include: 'set', 'modify', 'remove'
 * @readonly
 * @enum {string}
 */
export enum PathSetAccessControlRecursiveMode {
  Set = 'set',
  Modify = 'modify',
  Remove = 'remove',
}

/**
 * Defines values for LeaseAction.
 * Possible values include: 'acquire', 'release', 'renew', 'break', 'change', 'auto-renew',
 * 'acquire-release'
 * @readonly
 * @enum {string}
 */
export enum LeaseAction {
  Acquire = 'acquire',
  Release = 'release',
  Renew = 'renew',
  Break = 'break',
  Change = 'change',
  AutoRenew = 'auto-renew',
  AcquireRelease = 'acquire-release',
}

/**
 * Defines values for PathExpiryOptions.
 * Possible values include: 'NeverExpire', 'RelativeToCreation', 'RelativeToNow', 'Absolute'
 * @readonly
 * @enum {string}
 */
export enum PathExpiryOptions {
  NeverExpire = 'NeverExpire',
  RelativeToCreation = 'RelativeToCreation',
  RelativeToNow = 'RelativeToNow',
  Absolute = 'Absolute',
}

/**
 * Defines values for ListBlobsIncludeItem.
 * Possible values include: '', 'copy', 'deleted', 'metadata', 'snapshots', 'uncommittedblobs',
 * 'versions', 'tags', 'immutabilitypolicy', 'legalhold', 'deletedwithversions', 'permissions'
 * @readonly
 * @enum {string}
 */
export enum ListBlobsIncludeItem {
  EmptyString = '',
  Copy = 'copy',
  Deleted = 'deleted',
  Metadata = 'metadata',
  Snapshots = 'snapshots',
  Uncommittedblobs = 'uncommittedblobs',
  Versions = 'versions',
  Tags = 'tags',
  Immutabilitypolicy = 'immutabilitypolicy',
  Legalhold = 'legalhold',
  Deletedwithversions = 'deletedwithversions',
  Permissions = 'permissions',
}

/**
 * Defines values for ListBlobsShowOnly.
 * Possible values include: 'deleted'
 * @readonly
 * @enum {string}
 */
export enum ListBlobsShowOnly {
  Deleted = 'deleted',
}

/**
 * Defines values for EncryptionAlgorithmType.
 * Possible values include: 'AES256'
 * @readonly
 * @enum {string}
 */
export enum EncryptionAlgorithmType {
  AES256 = 'AES256',
}

/**
 * Defines values for PremiumPageBlobAccessTier.
 * Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70',
 * 'P80'
 * @readonly
 * @enum {string}
 */
export enum PremiumPageBlobAccessTier {
  P4 = 'P4',
  P6 = 'P6',
  P10 = 'P10',
  P15 = 'P15',
  P20 = 'P20',
  P30 = 'P30',
  P40 = 'P40',
  P50 = 'P50',
  P60 = 'P60',
  P70 = 'P70',
  P80 = 'P80',
}

/**
 * Defines values for BlobExpiryOptions.
 * Possible values include: 'NeverExpire', 'RelativeToCreation', 'RelativeToNow', 'Absolute'
 * @readonly
 * @enum {string}
 */
export enum BlobExpiryOptions {
  NeverExpire = 'NeverExpire',
  RelativeToCreation = 'RelativeToCreation',
  RelativeToNow = 'RelativeToNow',
  Absolute = 'Absolute',
}

/**
 * Defines values for BlockListType.
 * Possible values include: 'committed', 'uncommitted', 'all'
 * @readonly
 * @enum {string}
 */
export enum BlockListType {
  Committed = 'committed',
  Uncommitted = 'uncommitted',
  All = 'all',
}

/**
 * Defines values for BlobCopySourceTags.
 * Possible values include: 'REPLACE', 'COPY'
 * @readonly
 * @enum {string}
 */
export enum BlobCopySourceTags {
  REPLACE = 'REPLACE',
  COPY = 'COPY',
}

/**
 * Defines values for FilterBlobsIncludeItem.
 * Possible values include: 'none', 'versions'
 * @readonly
 * @enum {string}
 */
export enum FilterBlobsIncludeItem {
  None = 'none',
  Versions = 'versions',
}

/**
 * Defines values for ListContainersIncludeType.
 * Possible values include: '', 'metadata', 'deleted', 'system'
 * @readonly
 * @enum {string}
 */
export enum ListContainersIncludeType {
  EmptyString = '',
  Metadata = 'metadata',
  Deleted = 'deleted',
  System = 'system',
}

/**
 * Defines values for SequenceNumberActionType.
 * Possible values include: 'max', 'update', 'increment'
 * @readonly
 * @enum {string}
 */
export enum SequenceNumberActionType {
  Max = 'max',
  Update = 'update',
  Increment = 'increment',
}

/**
 * Defines values for PathResourceType.
 * Possible values include: 'directory', 'file'
 * @readonly
 * @enum {string}
 */
export enum PathResourceType {
  Directory = 'directory',
  File = 'file',
}

/**
 * Defines values for PathRenameMode.
 * Possible values include: 'legacy', 'posix'
 * @readonly
 * @enum {string}
 */
export enum PathRenameMode {
  Legacy = 'legacy',
  Posix = 'posix',
}

/**
 * Defines values for PathUpdateAction.
 * Possible values include: 'append', 'flush', 'setProperties', 'setAccessControl',
 * 'setAccessControlRecursive'
 * @readonly
 * @enum {string}
 */
export enum PathUpdateAction {
  Append = 'append',
  Flush = 'flush',
  SetProperties = 'setProperties',
  SetAccessControl = 'setAccessControl',
  SetAccessControlRecursive = 'setAccessControlRecursive',
}

/**
 * Defines values for PathLeaseAction.
 * Possible values include: 'acquire', 'break', 'change', 'renew', 'release'
 * @readonly
 * @enum {string}
 */
export enum PathLeaseAction {
  Acquire = 'acquire',
  Break = 'break',
  Change = 'change',
  Renew = 'renew',
  Release = 'release',
}

/**
 * Defines values for PathGetPropertiesAction.
 * Possible values include: 'getAccessControl', 'getStatus'
 * @readonly
 * @enum {string}
 */
export enum PathGetPropertiesAction {
  GetAccessControl = 'getAccessControl',
  GetStatus = 'getStatus',
}

/**
 * Defines values for SkuName.
 * Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS',
 * 'Premium_LRS'
 * @readonly
 * @enum {string}
 */
export enum SkuName {
  StandardLRS = 'Standard_LRS',
  StandardGRS = 'Standard_GRS',
  StandardRAGRS = 'Standard_RAGRS',
  StandardZRS = 'Standard_ZRS',
  PremiumLRS = 'Premium_LRS',
}

/**
 * Defines values for AccountKind.
 * Possible values include: 'Storage', 'BlobStorage', 'StorageV2', 'FileStorage',
 * 'BlockBlobStorage'
 * @readonly
 * @enum {string}
 */
export enum AccountKind {
  Storage = 'Storage',
  BlobStorage = 'BlobStorage',
  StorageV2 = 'StorageV2',
  FileStorage = 'FileStorage',
  BlockBlobStorage = 'BlockBlobStorage',
}

/**
 * Defines values for SyncCopyStatusType.
 * Possible values include: 'success'
 * @readonly
 * @enum {string}
 */
export enum SyncCopyStatusType {
  Success = 'success',
}

/**
 * Contains response data for the listFileSystems operation.
 */
export type ServiceListFileSystemsResponse = FileSystemList & ServiceListFileSystemsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setProperties operation.
 */
export type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the getProperties operation.
 */
export type ServiceGetPropertiesResponse = StorageServiceProperties & ServiceGetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getStatistics operation.
 */
export type ServiceGetStatisticsResponse = StorageServiceStats & ServiceGetStatisticsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the listContainersSegment operation.
 */
export type ServiceListContainersSegmentResponse = ListContainersSegmentResponse & ServiceListContainersSegmentHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getUserDelegationKey operation.
 */
export type ServiceGetUserDelegationKeyResponse = UserDelegationKey & ServiceGetUserDelegationKeyHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getAccountInfo operation.
 */
export type ServiceGetAccountInfoResponse = ServiceGetAccountInfoHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getAccountInfoWithHead operation.
 */
export type ServiceGetAccountInfoWithHeadResponse = ServiceGetAccountInfoWithHeadHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the submitBatch operation.
 */
export type ServiceSubmitBatchResponse = ServiceSubmitBatchHeaders & {
  /**
   * The response body as a node.js Readable stream.
   */
  body?: NodeJS.ReadableStream;
} & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the filterBlobs operation.
 */
export type ServiceFilterBlobsResponse = FilterBlobSegment & ServiceFilterBlobsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the create operation.
 */
export type FileSystemCreateResponse = FileSystemCreateHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the setProperties operation.
 */
export type FileSystemSetPropertiesResponse = FileSystemSetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getProperties operation.
 */
export type FileSystemGetPropertiesResponse = FileSystemGetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type FileSystemDeleteResponse = FileSystemDeleteHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the listPaths operation.
 */
export type FileSystemListPathsResponse = PathList & FileSystemListPathsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the listBlobFlatSegment operation.
 */
export type FileSystemListBlobFlatSegmentResponse = ListBlobsFlatSegmentResponse & FileSystemListBlobFlatSegmentHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the listBlobHierarchySegment operation.
 */
export type FileSystemListBlobHierarchySegmentResponse = ListBlobsHierarchySegmentResponse & FileSystemListBlobHierarchySegmentHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the create operation.
 */
export type PathCreateResponse = PathCreateHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the update operation.
 */
export type PathUpdateResponse = SetAccessControlRecursiveResponse & PathUpdateHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200 | 202;
};

/**
 * Contains response data for the lease operation.
 */
export type PathLeaseResponse = PathLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200 | 201 | 202;
};

/**
 * Contains response data for the read operation.
 */
export type PathReadResponse = PathReadHeaders & {
  /**
   * The response body as a node.js Readable stream.
   */
  body?: NodeJS.ReadableStream;
} & {
  /**
   * The response status code.
   */
  statusCode: 200 | 206;
};

/**
 * Contains response data for the getProperties operation.
 */
export type PathGetPropertiesResponse = PathGetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type PathDeleteResponse = PathDeleteHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200 | 202;
};

/**
 * Contains response data for the setAccessControl operation.
 */
export type PathSetAccessControlResponse = PathSetAccessControlHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setAccessControlRecursive operation.
 */
export type PathSetAccessControlRecursiveResponse = SetAccessControlRecursiveResponse & PathSetAccessControlRecursiveHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setProperties operation.
 */
export type PathSetPropertiesResponse = PathSetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the flushData operation.
 */
export type PathFlushDataResponse = PathFlushDataHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the appendData operation.
 */
export type PathAppendDataResponse = PathAppendDataHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the setExpiry operation.
 */
export type PathSetExpiryResponse = PathSetExpiryHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the undelete operation.
 */
export type PathUndeleteResponse = PathUndeleteHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the create operation.
 */
export type ContainerCreateResponse = ContainerCreateHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the getProperties operation.
 */
export type ContainerGetPropertiesResponse = ContainerGetPropertiesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getPropertiesWithHead operation.
 */
export type ContainerGetPropertiesWithHeadResponse = ContainerGetPropertiesWithHeadHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ContainerDeleteResponse = ContainerDeleteHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the setMetadata operation.
 */
export type ContainerSetMetadataResponse = ContainerSetMetadataHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getAccessPolicy operation.
 */
export type ContainerGetAccessPolicyResponse = Array<SignedIdentifier> & ContainerGetAccessPolicyHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setAccessPolicy operation.
 */
export type ContainerSetAccessPolicyResponse = ContainerSetAccessPolicyHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the restore operation.
 */
export type ContainerRestoreResponse = ContainerRestoreHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the submitBatch operation.
 */
export type ContainerSubmitBatchResponse = ContainerSubmitBatchHeaders & {
  /**
   * The response body as a node.js Readable stream.
   */
  body?: NodeJS.ReadableStream;
} & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the filterBlobs operation.
 */
export type ContainerFilterBlobsResponse = FilterBlobSegment & ContainerFilterBlobsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the acquireLease operation.
 */
export type ContainerAcquireLeaseResponse = ContainerAcquireLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the releaseLease operation.
 */
export type ContainerReleaseLeaseResponse = ContainerReleaseLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the renewLease operation.
 */
export type ContainerRenewLeaseResponse = ContainerRenewLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the breakLease operation.
 */
export type ContainerBreakLeaseResponse = ContainerBreakLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the changeLease operation.
 */
export type ContainerChangeLeaseResponse = ContainerChangeLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getAccountInfo operation.
 */
export type ContainerGetAccountInfoResponse = ContainerGetAccountInfoHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getAccountInfoWithHead operation.
 */
export type ContainerGetAccountInfoWithHeadResponse = ContainerGetAccountInfoWithHeadHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the create operation.
 */
export type PageBlobCreateResponse = PageBlobCreateHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the uploadPages operation.
 */
export type PageBlobUploadPagesResponse = PageBlobUploadPagesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the clearPages operation.
 */
export type PageBlobClearPagesResponse = PageBlobClearPagesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the uploadPagesFromURL operation.
 */
export type PageBlobUploadPagesFromURLResponse = PageBlobUploadPagesFromURLHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the getPageRanges operation.
 */
export type PageBlobGetPageRangesResponse = PageList & PageBlobGetPageRangesHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getPageRangesDiff operation.
 */
export type PageBlobGetPageRangesDiffResponse = PageList & PageBlobGetPageRangesDiffHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the resize operation.
 */
export type PageBlobResizeResponse = PageBlobResizeHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the updateSequenceNumber operation.
 */
export type PageBlobUpdateSequenceNumberResponse = PageBlobUpdateSequenceNumberHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the copyIncremental operation.
 */
export type PageBlobCopyIncrementalResponse = PageBlobCopyIncrementalHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the create operation.
 */
export type AppendBlobCreateResponse = AppendBlobCreateHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the appendBlock operation.
 */
export type AppendBlobAppendBlockResponse = AppendBlobAppendBlockHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the appendBlockFromUrl operation.
 */
export type AppendBlobAppendBlockFromUrlResponse = AppendBlobAppendBlockFromUrlHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the seal operation.
 */
export type AppendBlobSealResponse = AppendBlobSealHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the upload operation.
 */
export type BlockBlobUploadResponse = BlockBlobUploadHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the putBlobFromUrl operation.
 */
export type BlockBlobPutBlobFromUrlResponse = BlockBlobPutBlobFromUrlHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the stageBlock operation.
 */
export type BlockBlobStageBlockResponse = BlockBlobStageBlockHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the stageBlockFromURL operation.
 */
export type BlockBlobStageBlockFromURLResponse = BlockBlobStageBlockFromURLHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the commitBlockList operation.
 */
export type BlockBlobCommitBlockListResponse = BlockBlobCommitBlockListHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the getBlockList operation.
 */
export type BlockBlobGetBlockListResponse = BlockList & BlockBlobGetBlockListHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the undelete operation.
 */
export type BlobUndeleteResponse = BlobUndeleteHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setExpiry operation.
 */
export type BlobSetExpiryResponse = BlobSetExpiryHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setHTTPHeaders operation.
 */
export type BlobSetHTTPHeadersResponse = BlobSetHTTPHeadersHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setImmutabilityPolicy operation.
 */
export type BlobSetImmutabilityPolicyResponse = BlobSetImmutabilityPolicyHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the deleteImmutabilityPolicy operation.
 */
export type BlobDeleteImmutabilityPolicyResponse = BlobDeleteImmutabilityPolicyHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setLegalHold operation.
 */
export type BlobSetLegalHoldResponse = BlobSetLegalHoldHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setMetadata operation.
 */
export type BlobSetMetadataResponse = BlobSetMetadataHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the acquireLease operation.
 */
export type BlobAcquireLeaseResponse = BlobAcquireLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the releaseLease operation.
 */
export type BlobReleaseLeaseResponse = BlobReleaseLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the renewLease operation.
 */
export type BlobRenewLeaseResponse = BlobRenewLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the changeLease operation.
 */
export type BlobChangeLeaseResponse = BlobChangeLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the breakLease operation.
 */
export type BlobBreakLeaseResponse = BlobBreakLeaseHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the createSnapshot operation.
 */
export type BlobCreateSnapshotResponse = BlobCreateSnapshotHeaders & {
  /**
   * The response status code.
   */
  statusCode: 201;
};

/**
 * Contains response data for the startCopyFromURL operation.
 */
export type BlobStartCopyFromURLResponse = BlobStartCopyFromURLHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the copyFromURL operation.
 */
export type BlobCopyFromURLResponse = BlobCopyFromURLHeaders & {
  /**
   * The response status code.
   */
  statusCode: 202;
};

/**
 * Contains response data for the abortCopyFromURL operation.
 */
export type BlobAbortCopyFromURLResponse = BlobAbortCopyFromURLHeaders & {
  /**
   * The response status code.
   */
  statusCode: 204;
};

/**
 * Contains response data for the setTier operation.
 */
export type BlobSetTierResponse = BlobSetTierHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200 | 202;
};

/**
 * Contains response data for the getAccountInfo operation.
 */
export type BlobGetAccountInfoResponse = BlobGetAccountInfoHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the getAccountInfoWithHead operation.
 */
export type BlobGetAccountInfoWithHeadResponse = BlobGetAccountInfoWithHeadHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the query operation.
 */
export type BlobQueryResponse = BlobQueryHeaders & {
  /**
   * The response body as a node.js Readable stream.
   */
  body?: NodeJS.ReadableStream;
} & {
  /**
   * The response status code.
   */
  statusCode: 200 | 206;
};

/**
 * Contains response data for the getTags operation.
 */
export type BlobGetTagsResponse = BlobTags & BlobGetTagsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 200;
};

/**
 * Contains response data for the setTags operation.
 */
export type BlobSetTagsResponse = BlobSetTagsHeaders & {
  /**
   * The response status code.
   */
  statusCode: 204;
};
