/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

// tslint:disable:quotemark
// tslint:disable:object-literal-sort-keys

import * as msRest from "@azure/ms-rest-js";

export const acl: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "acl"
  ],
  mapper: {
    serializedName: "x-ms-acl",
    type: {
      name: "String"
    }
  }
};
export const action0: msRest.OperationQueryParameter = {
  parameterPath: "action",
  mapper: {
    required: true,
    serializedName: "action",
    type: {
      name: "Enum",
      allowedValues: [
        "append",
        "flush",
        "setProperties",
        "setAccessControl",
        "setAccessControlRecursive"
      ]
    }
  }
};
export const action1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "action"
  ],
  mapper: {
    serializedName: "action",
    type: {
      name: "Enum",
      allowedValues: [
        "getAccessControl",
        "getStatus"
      ]
    }
  }
};
export const action2: msRest.OperationQueryParameter = {
  parameterPath: "action",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "action",
    defaultValue: 'setAccessControl',
    type: {
      name: "String"
    }
  }
};
export const action3: msRest.OperationQueryParameter = {
  parameterPath: "action",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "action",
    defaultValue: 'setAccessControlRecursive',
    type: {
      name: "String"
    }
  }
};
export const action4: msRest.OperationQueryParameter = {
  parameterPath: "action",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "action",
    defaultValue: 'flush',
    type: {
      name: "String"
    }
  }
};
export const action5: msRest.OperationQueryParameter = {
  parameterPath: "action",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "action",
    defaultValue: 'append',
    type: {
      name: "String"
    }
  }
};
export const cacheControl: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "cacheControl"
  ],
  mapper: {
    serializedName: "x-ms-cache-control",
    type: {
      name: "String"
    }
  }
};
export const close: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "close"
  ],
  mapper: {
    serializedName: "close",
    type: {
      name: "Boolean"
    }
  }
};
export const comp0: msRest.OperationQueryParameter = {
  parameterPath: "comp",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "comp",
    defaultValue: 'list',
    type: {
      name: "String"
    }
  }
};
export const comp1: msRest.OperationQueryParameter = {
  parameterPath: "comp",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "comp",
    defaultValue: 'expiry',
    type: {
      name: "String"
    }
  }
};
export const comp2: msRest.OperationQueryParameter = {
  parameterPath: "comp",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "comp",
    defaultValue: 'undelete',
    type: {
      name: "String"
    }
  }
};
export const contentDisposition: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "contentDisposition"
  ],
  mapper: {
    serializedName: "x-ms-content-disposition",
    type: {
      name: "String"
    }
  }
};
export const contentEncoding: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "contentEncoding"
  ],
  mapper: {
    serializedName: "x-ms-content-encoding",
    type: {
      name: "String"
    }
  }
};
export const contentLanguage: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "contentLanguage"
  ],
  mapper: {
    serializedName: "x-ms-content-language",
    type: {
      name: "String"
    }
  }
};
export const contentLength: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "contentLength"
  ],
  mapper: {
    serializedName: "Content-Length",
    constraints: {
      InclusiveMinimum: 0
    },
    type: {
      name: "Number"
    }
  }
};
export const contentMD5: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "contentMD5"
  ],
  mapper: {
    serializedName: "x-ms-content-md5",
    type: {
      name: "ByteArray"
    }
  }
};
export const contentType: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "contentType"
  ],
  mapper: {
    serializedName: "x-ms-content-type",
    type: {
      name: "String"
    }
  }
};
export const continuation: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "continuation"
  ],
  mapper: {
    serializedName: "continuation",
    type: {
      name: "String"
    }
  }
};
export const delimiter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "delimiter"
  ],
  mapper: {
    serializedName: "delimiter",
    type: {
      name: "String"
    }
  }
};
export const encryptionAlgorithm: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "cpkInfo",
    "encryptionAlgorithm"
  ],
  mapper: {
    serializedName: "x-ms-encryption-algorithm",
    type: {
      name: "Enum",
      allowedValues: [
        "AES256"
      ]
    }
  }
};
export const encryptionContext: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "encryptionContext"
  ],
  mapper: {
    serializedName: "x-ms-encryption-context",
    type: {
      name: "String"
    }
  }
};
export const encryptionKey: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "cpkInfo",
    "encryptionKey"
  ],
  mapper: {
    serializedName: "x-ms-encryption-key",
    type: {
      name: "String"
    }
  }
};
export const encryptionKeySha256: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "cpkInfo",
    "encryptionKeySha256"
  ],
  mapper: {
    serializedName: "x-ms-encryption-key-sha256",
    type: {
      name: "String"
    }
  }
};
export const expiresOn: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "expiresOn"
  ],
  mapper: {
    serializedName: "x-ms-expiry-time",
    type: {
      name: "String"
    }
  }
};
export const expiryOptions0: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "expiryOptions"
  ],
  mapper: {
    serializedName: "x-ms-expiry-option",
    type: {
      name: "String"
    }
  }
};
export const expiryOptions1: msRest.OperationParameter = {
  parameterPath: "expiryOptions",
  mapper: {
    required: true,
    serializedName: "x-ms-expiry-option",
    type: {
      name: "String"
    }
  }
};
export const fileSystem: msRest.OperationURLParameter = {
  parameterPath: "fileSystem",
  mapper: {
    required: true,
    serializedName: "filesystem",
    constraints: {
      MaxLength: 63,
      MinLength: 3,
      Pattern: /^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$/
    },
    type: {
      name: "String"
    }
  }
};
export const flush: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "flush"
  ],
  mapper: {
    serializedName: "flush",
    type: {
      name: "Boolean"
    }
  }
};
export const forceFlag: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "forceFlag"
  ],
  mapper: {
    serializedName: "forceFlag",
    type: {
      name: "Boolean"
    }
  }
};
export const group: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "group"
  ],
  mapper: {
    serializedName: "x-ms-group",
    type: {
      name: "String"
    }
  }
};
export const ifMatch: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "modifiedAccessConditions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifModifiedSince: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "modifiedAccessConditions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const ifNoneMatch: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "modifiedAccessConditions",
    "ifNoneMatch"
  ],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};
export const ifUnmodifiedSince: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "modifiedAccessConditions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const include: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "include"
  ],
  mapper: {
    serializedName: "include",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "Enum",
          allowedValues: [
            "copy",
            "deleted",
            "metadata",
            "snapshots",
            "uncommittedblobs",
            "versions",
            "tags"
          ]
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const leaseAction: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "leaseAction"
  ],
  mapper: {
    serializedName: "x-ms-lease-action",
    type: {
      name: "Enum",
      allowedValues: [
        "acquire",
        "auto-renew",
        "release",
        "acquire-release"
      ]
    }
  }
};
export const leaseDuration: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "leaseDuration"
  ],
  mapper: {
    serializedName: "x-ms-lease-duration",
    type: {
      name: "Number"
    }
  }
};
export const leaseId: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "leaseAccessConditions",
    "leaseId"
  ],
  mapper: {
    serializedName: "x-ms-lease-id",
    type: {
      name: "String"
    }
  }
};
export const marker: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "marker"
  ],
  mapper: {
    serializedName: "marker",
    type: {
      name: "String"
    }
  }
};
export const maxRecords: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "maxRecords"
  ],
  mapper: {
    serializedName: "maxRecords",
    constraints: {
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const maxResults: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "maxResults"
  ],
  mapper: {
    serializedName: "maxResults",
    constraints: {
      InclusiveMinimum: 1
    },
    type: {
      name: "Number"
    }
  }
};
export const mode0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "mode"
  ],
  mapper: {
    serializedName: "mode",
    type: {
      name: "Enum",
      allowedValues: [
        "legacy",
        "posix"
      ]
    }
  }
};
export const mode1: msRest.OperationQueryParameter = {
  parameterPath: "mode",
  mapper: {
    required: true,
    serializedName: "mode",
    type: {
      name: "Enum",
      allowedValues: [
        "set",
        "modify",
        "remove"
      ]
    }
  }
};
export const owner: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "owner"
  ],
  mapper: {
    serializedName: "x-ms-owner",
    type: {
      name: "String"
    }
  }
};
export const paginated: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "paginated"
  ],
  mapper: {
    serializedName: "paginated",
    type: {
      name: "Boolean"
    }
  }
};
export const path0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "path"
  ],
  mapper: {
    serializedName: "directory",
    type: {
      name: "String"
    }
  }
};
export const path1: msRest.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    required: true,
    serializedName: "path",
    type: {
      name: "String"
    }
  }
};
export const permissions: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "permissions"
  ],
  mapper: {
    serializedName: "x-ms-permissions",
    type: {
      name: "String"
    }
  }
};
export const position: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "position"
  ],
  mapper: {
    serializedName: "position",
    type: {
      name: "Number"
    }
  }
};
export const prefix: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "prefix"
  ],
  mapper: {
    serializedName: "prefix",
    type: {
      name: "String"
    }
  }
};
export const properties: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "properties"
  ],
  mapper: {
    serializedName: "x-ms-properties",
    type: {
      name: "String"
    }
  }
};
export const proposedLeaseId: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "proposedLeaseId"
  ],
  mapper: {
    serializedName: "x-ms-proposed-lease-id",
    type: {
      name: "String"
    }
  }
};
export const range: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "range"
  ],
  mapper: {
    serializedName: "Range",
    type: {
      name: "String"
    }
  }
};
export const recursive0: msRest.OperationQueryParameter = {
  parameterPath: "recursive",
  mapper: {
    required: true,
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};
export const recursive1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "recursive"
  ],
  mapper: {
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};
export const renameSource: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "renameSource"
  ],
  mapper: {
    serializedName: "x-ms-rename-source",
    type: {
      name: "String"
    }
  }
};
export const requestId: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "requestId"
  ],
  mapper: {
    serializedName: "x-ms-client-request-id",
    type: {
      name: "String"
    }
  }
};
export const resource0: msRest.OperationQueryParameter = {
  parameterPath: "resource",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "resource",
    defaultValue: 'account',
    type: {
      name: "String"
    }
  }
};
export const resource1: msRest.OperationQueryParameter = {
  parameterPath: "resource",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "resource",
    defaultValue: 'filesystem',
    type: {
      name: "String"
    }
  }
};
export const resource2: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "resource"
  ],
  mapper: {
    serializedName: "resource",
    type: {
      name: "Enum",
      allowedValues: [
        "directory",
        "file"
      ]
    }
  }
};
export const restype: msRest.OperationQueryParameter = {
  parameterPath: "restype",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "restype",
    defaultValue: 'container',
    type: {
      name: "String"
    }
  }
};
export const retainUncommittedData: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "retainUncommittedData"
  ],
  mapper: {
    serializedName: "retainUncommittedData",
    type: {
      name: "Boolean"
    }
  }
};
export const showonly: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "showonly"
  ],
  mapper: {
    serializedName: "showonly",
    type: {
      name: "Enum",
      allowedValues: [
        "deleted"
      ]
    }
  }
};
export const sourceIfMatch: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "sourceModifiedAccessConditions",
    "sourceIfMatch"
  ],
  mapper: {
    serializedName: "x-ms-source-if-match",
    type: {
      name: "String"
    }
  }
};
export const sourceIfModifiedSince: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "sourceModifiedAccessConditions",
    "sourceIfModifiedSince"
  ],
  mapper: {
    serializedName: "x-ms-source-if-modified-since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const sourceIfNoneMatch: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "sourceModifiedAccessConditions",
    "sourceIfNoneMatch"
  ],
  mapper: {
    serializedName: "x-ms-source-if-none-match",
    type: {
      name: "String"
    }
  }
};
export const sourceIfUnmodifiedSince: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "sourceModifiedAccessConditions",
    "sourceIfUnmodifiedSince"
  ],
  mapper: {
    serializedName: "x-ms-source-if-unmodified-since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
export const sourceLeaseId: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "sourceLeaseId"
  ],
  mapper: {
    serializedName: "x-ms-source-lease-id",
    type: {
      name: "String"
    }
  }
};
export const timeout: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "timeout"
  ],
  mapper: {
    serializedName: "timeout",
    constraints: {
      InclusiveMinimum: 0
    },
    type: {
      name: "Number"
    }
  }
};
export const transactionalContentCrc64: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "transactionalContentCrc64"
  ],
  mapper: {
    serializedName: "x-ms-content-crc64",
    type: {
      name: "ByteArray"
    }
  }
};
export const transactionalContentHash: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "pathHTTPHeaders",
    "transactionalContentHash"
  ],
  mapper: {
    serializedName: "Content-MD5",
    type: {
      name: "ByteArray"
    }
  }
};
export const umask: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "umask"
  ],
  mapper: {
    serializedName: "x-ms-umask",
    type: {
      name: "String"
    }
  }
};
export const undeleteSource: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "undeleteSource"
  ],
  mapper: {
    serializedName: "x-ms-undelete-source",
    type: {
      name: "String"
    }
  }
};
export const upn: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "upn"
  ],
  mapper: {
    serializedName: "upn",
    type: {
      name: "Boolean"
    }
  }
};
export const url: msRest.OperationURLParameter = {
  parameterPath: "url",
  mapper: {
    required: true,
    serializedName: "url",
    defaultValue: '',
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const version: msRest.OperationParameter = {
  parameterPath: "version",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "x-ms-version",
    defaultValue: '2023-05-03',
    type: {
      name: "String"
    }
  }
};
export const xMsLeaseAction: msRest.OperationParameter = {
  parameterPath: "xMsLeaseAction",
  mapper: {
    required: true,
    serializedName: "x-ms-lease-action",
    type: {
      name: "Enum",
      allowedValues: [
        "acquire",
        "break",
        "change",
        "renew",
        "release"
      ]
    }
  }
};
export const xMsLeaseBreakPeriod: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "xMsLeaseBreakPeriod"
  ],
  mapper: {
    serializedName: "x-ms-lease-break-period",
    type: {
      name: "Number"
    }
  }
};
export const xMsLeaseDuration: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "xMsLeaseDuration"
  ],
  mapper: {
    serializedName: "x-ms-lease-duration",
    type: {
      name: "Number"
    }
  }
};
export const xMsRangeGetContentMd5: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "xMsRangeGetContentMd5"
  ],
  mapper: {
    serializedName: "x-ms-range-get-content-md5",
    type: {
      name: "Boolean"
    }
  }
};
