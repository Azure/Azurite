/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
// tslint:disable:object-literal-sort-keys

import * as msRest from "@azure/ms-rest-js";

export const AclFailedEntry: msRest.CompositeMapper = {
  serializedName: "AclFailedEntry",
  type: {
    name: "Composite",
    className: "AclFailedEntry",
    modelProperties: {
      name: {
        xmlName: "name",
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        xmlName: "type",
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        xmlName: "errorMessage",
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SetAccessControlRecursiveResponse: msRest.CompositeMapper = {
  serializedName: "SetAccessControlRecursiveResponse",
  type: {
    name: "Composite",
    className: "SetAccessControlRecursiveResponse",
    modelProperties: {
      directoriesSuccessful: {
        xmlName: "directoriesSuccessful",
        serializedName: "directoriesSuccessful",
        type: {
          name: "Number"
        }
      },
      filesSuccessful: {
        xmlName: "filesSuccessful",
        serializedName: "filesSuccessful",
        type: {
          name: "Number"
        }
      },
      failureCount: {
        xmlName: "failureCount",
        serializedName: "failureCount",
        type: {
          name: "Number"
        }
      },
      failedEntries: {
        xmlName: "failedEntries",
        xmlElementName: "AclFailedEntry",
        serializedName: "failedEntries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AclFailedEntry"
            }
          }
        }
      }
    }
  }
};

export const Path: msRest.CompositeMapper = {
  serializedName: "Path",
  type: {
    name: "Composite",
    className: "Path",
    modelProperties: {
      name: {
        xmlName: "name",
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDirectory: {
        xmlName: "isDirectory",
        serializedName: "isDirectory",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      lastModified: {
        xmlName: "lastModified",
        serializedName: "lastModified",
        type: {
          name: "String"
        }
      },
      eTag: {
        xmlName: "eTag",
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      contentLength: {
        xmlName: "contentLength",
        serializedName: "contentLength",
        type: {
          name: "Number"
        }
      },
      owner: {
        xmlName: "owner",
        serializedName: "owner",
        type: {
          name: "String"
        }
      },
      group: {
        xmlName: "group",
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      permissions: {
        xmlName: "permissions",
        serializedName: "permissions",
        type: {
          name: "String"
        }
      },
      encryptionScope: {
        xmlName: "EncryptionScope",
        serializedName: "EncryptionScope",
        type: {
          name: "String"
        }
      },
      creationTime: {
        xmlName: "creationTime",
        serializedName: "creationTime",
        type: {
          name: "String"
        }
      },
      expiryTime: {
        xmlName: "expiryTime",
        serializedName: "expiryTime",
        type: {
          name: "String"
        }
      },
      encryptionContext: {
        xmlName: "EncryptionContext",
        serializedName: "EncryptionContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathList: msRest.CompositeMapper = {
  serializedName: "PathList",
  type: {
    name: "Composite",
    className: "PathList",
    modelProperties: {
      paths: {
        xmlName: "paths",
        xmlElementName: "Path",
        serializedName: "paths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Path"
            }
          }
        }
      }
    }
  }
};

export const FileSystem: msRest.CompositeMapper = {
  serializedName: "FileSystem",
  type: {
    name: "Composite",
    className: "FileSystem",
    modelProperties: {
      name: {
        xmlName: "name",
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      lastModified: {
        xmlName: "lastModified",
        serializedName: "lastModified",
        type: {
          name: "String"
        }
      },
      eTag: {
        xmlName: "eTag",
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobPrefix: msRest.CompositeMapper = {
  serializedName: "BlobPrefix",
  type: {
    name: "Composite",
    className: "BlobPrefix",
    modelProperties: {
      name: {
        xmlName: "Name",
        required: true,
        serializedName: "Name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobPropertiesInternal: msRest.CompositeMapper = {
  xmlName: "Properties",
  serializedName: "BlobPropertiesInternal",
  type: {
    name: "Composite",
    className: "BlobPropertiesInternal",
    modelProperties: {
      creationTime: {
        xmlName: "Creation-Time",
        serializedName: "Creation-Time",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      lastModified: {
        xmlName: "Last-Modified",
        required: true,
        serializedName: "Last-Modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      etag: {
        xmlName: "Etag",
        required: true,
        serializedName: "Etag",
        type: {
          name: "String"
        }
      },
      contentLength: {
        xmlName: "Content-Length",
        serializedName: "Content-Length",
        type: {
          name: "Number"
        }
      },
      contentType: {
        xmlName: "Content-Type",
        serializedName: "Content-Type",
        type: {
          name: "String"
        }
      },
      contentEncoding: {
        xmlName: "Content-Encoding",
        serializedName: "Content-Encoding",
        type: {
          name: "String"
        }
      },
      contentLanguage: {
        xmlName: "Content-Language",
        serializedName: "Content-Language",
        type: {
          name: "String"
        }
      },
      contentMD5: {
        xmlName: "Content-MD5",
        serializedName: "Content-MD5",
        type: {
          name: "ByteArray"
        }
      },
      contentDisposition: {
        xmlName: "Content-Disposition",
        serializedName: "Content-Disposition",
        type: {
          name: "String"
        }
      },
      cacheControl: {
        xmlName: "Cache-Control",
        serializedName: "Cache-Control",
        type: {
          name: "String"
        }
      },
      blobSequenceNumber: {
        xmlName: "x-ms-blob-sequence-number",
        serializedName: "x-ms-blob-sequence-number",
        type: {
          name: "Number"
        }
      },
      copyId: {
        xmlName: "CopyId",
        serializedName: "CopyId",
        type: {
          name: "String"
        }
      },
      copySource: {
        xmlName: "CopySource",
        serializedName: "CopySource",
        type: {
          name: "String"
        }
      },
      copyProgress: {
        xmlName: "CopyProgress",
        serializedName: "CopyProgress",
        type: {
          name: "String"
        }
      },
      copyCompletionTime: {
        xmlName: "CopyCompletionTime",
        serializedName: "CopyCompletionTime",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      copyStatusDescription: {
        xmlName: "CopyStatusDescription",
        serializedName: "CopyStatusDescription",
        type: {
          name: "String"
        }
      },
      serverEncrypted: {
        xmlName: "ServerEncrypted",
        serializedName: "ServerEncrypted",
        type: {
          name: "Boolean"
        }
      },
      incrementalCopy: {
        xmlName: "IncrementalCopy",
        serializedName: "IncrementalCopy",
        type: {
          name: "Boolean"
        }
      },
      destinationSnapshot: {
        xmlName: "DestinationSnapshot",
        serializedName: "DestinationSnapshot",
        type: {
          name: "String"
        }
      },
      deletedTime: {
        xmlName: "DeletedTime",
        serializedName: "DeletedTime",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      remainingRetentionDays: {
        xmlName: "RemainingRetentionDays",
        serializedName: "RemainingRetentionDays",
        type: {
          name: "Number"
        }
      },
      accessTierInferred: {
        xmlName: "AccessTierInferred",
        serializedName: "AccessTierInferred",
        type: {
          name: "Boolean"
        }
      },
      customerProvidedKeySha256: {
        xmlName: "CustomerProvidedKeySha256",
        serializedName: "CustomerProvidedKeySha256",
        type: {
          name: "String"
        }
      },
      encryptionScope: {
        xmlName: "EncryptionScope",
        serializedName: "EncryptionScope",
        type: {
          name: "String"
        }
      },
      accessTierChangeTime: {
        xmlName: "AccessTierChangeTime",
        serializedName: "AccessTierChangeTime",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      tagCount: {
        xmlName: "TagCount",
        serializedName: "TagCount",
        type: {
          name: "Number"
        }
      },
      expiresOn: {
        xmlName: "Expiry-Time",
        serializedName: "Expiry-Time",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      isSealed: {
        xmlName: "Sealed",
        serializedName: "Sealed",
        type: {
          name: "Boolean"
        }
      },
      lastAccessedOn: {
        xmlName: "LastAccessTime",
        serializedName: "LastAccessTime",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      deleteTime: {
        xmlName: "DeleteTime",
        serializedName: "DeleteTime",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    }
  }
};

export const BlobItemInternal: msRest.CompositeMapper = {
  xmlName: "Blob",
  serializedName: "BlobItemInternal",
  type: {
    name: "Composite",
    className: "BlobItemInternal",
    modelProperties: {
      name: {
        xmlName: "Name",
        required: true,
        serializedName: "Name",
        type: {
          name: "String"
        }
      },
      deleted: {
        xmlName: "Deleted",
        required: true,
        serializedName: "Deleted",
        type: {
          name: "Boolean"
        }
      },
      snapshot: {
        xmlName: "Snapshot",
        required: true,
        serializedName: "Snapshot",
        type: {
          name: "String"
        }
      },
      versionId: {
        xmlName: "VersionId",
        serializedName: "VersionId",
        type: {
          name: "String"
        }
      },
      isCurrentVersion: {
        xmlName: "IsCurrentVersion",
        serializedName: "IsCurrentVersion",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        xmlName: "Properties",
        required: true,
        serializedName: "Properties",
        type: {
          name: "Composite",
          className: "BlobPropertiesInternal"
        }
      },
      deletionId: {
        xmlName: "DeletionId",
        serializedName: "DeletionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobHierarchyListSegment: msRest.CompositeMapper = {
  xmlName: "Blobs",
  serializedName: "BlobHierarchyListSegment",
  type: {
    name: "Composite",
    className: "BlobHierarchyListSegment",
    modelProperties: {
      blobPrefixes: {
        xmlName: "BlobPrefixes",
        xmlElementName: "BlobPrefix",
        serializedName: "BlobPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BlobPrefix"
            }
          }
        }
      },
      blobItems: {
        xmlName: "BlobItems",
        xmlElementName: "Blob",
        required: true,
        serializedName: "BlobItems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BlobItemInternal"
            }
          }
        }
      }
    }
  }
};

export const ListBlobsHierarchySegmentResponse: msRest.CompositeMapper = {
  xmlName: "EnumerationResults",
  serializedName: "ListBlobsHierarchySegmentResponse",
  type: {
    name: "Composite",
    className: "ListBlobsHierarchySegmentResponse",
    modelProperties: {
      serviceEndpoint: {
        xmlIsAttribute: true,
        xmlName: "ServiceEndpoint",
        required: true,
        serializedName: "ServiceEndpoint",
        type: {
          name: "String"
        }
      },
      containerName: {
        xmlIsAttribute: true,
        xmlName: "ContainerName",
        required: true,
        serializedName: "ContainerName",
        type: {
          name: "String"
        }
      },
      prefix: {
        xmlName: "Prefix",
        serializedName: "Prefix",
        type: {
          name: "String"
        }
      },
      marker: {
        xmlName: "Marker",
        serializedName: "Marker",
        type: {
          name: "String"
        }
      },
      maxResults: {
        xmlName: "MaxResults",
        serializedName: "MaxResults",
        type: {
          name: "Number"
        }
      },
      delimiter: {
        xmlName: "Delimiter",
        serializedName: "Delimiter",
        type: {
          name: "String"
        }
      },
      segment: {
        xmlName: "Blobs",
        required: true,
        serializedName: "Segment",
        type: {
          name: "Composite",
          className: "BlobHierarchyListSegment"
        }
      },
      nextMarker: {
        xmlName: "NextMarker",
        serializedName: "NextMarker",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemList: msRest.CompositeMapper = {
  serializedName: "FileSystemList",
  type: {
    name: "Composite",
    className: "FileSystemList",
    modelProperties: {
      filesystems: {
        xmlName: "filesystems",
        xmlElementName: "FileSystem",
        serializedName: "filesystems",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FileSystem"
            }
          }
        }
      }
    }
  }
};

export const StorageErrorError: msRest.CompositeMapper = {
  serializedName: "StorageError_error",
  type: {
    name: "Composite",
    className: "StorageErrorError",
    modelProperties: {
      code: {
        xmlName: "Code",
        serializedName: "Code",
        type: {
          name: "String"
        }
      },
      message: {
        xmlName: "Message",
        serializedName: "Message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageError: msRest.CompositeMapper = {
  serializedName: "StorageError",
  type: {
    name: "Composite",
    className: "StorageError",
    modelProperties: {
      error: {
        xmlName: "error",
        serializedName: "error",
        type: {
          name: "Composite",
          className: "StorageErrorError"
        }
      }
    }
  }
};

export const ModifiedAccessConditions: msRest.CompositeMapper = {
  xmlName: "modified-access-conditions",
  type: {
    name: "Composite",
    className: "ModifiedAccessConditions",
    modelProperties: {
      ifModifiedSince: {
        xmlName: "ifModifiedSince",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      ifUnmodifiedSince: {
        xmlName: "ifUnmodifiedSince",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      ifMatch: {
        xmlName: "ifMatch",
        type: {
          name: "String"
        }
      },
      ifNoneMatch: {
        xmlName: "ifNoneMatch",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathHTTPHeaders: msRest.CompositeMapper = {
  xmlName: "path-HTTP-headers",
  type: {
    name: "Composite",
    className: "PathHTTPHeaders",
    modelProperties: {
      cacheControl: {
        xmlName: "cacheControl",
        type: {
          name: "String"
        }
      },
      contentEncoding: {
        xmlName: "contentEncoding",
        type: {
          name: "String"
        }
      },
      contentLanguage: {
        xmlName: "contentLanguage",
        type: {
          name: "String"
        }
      },
      contentDisposition: {
        xmlName: "contentDisposition",
        type: {
          name: "String"
        }
      },
      contentType: {
        xmlName: "contentType",
        type: {
          name: "String"
        }
      },
      contentMD5: {
        xmlName: "contentMD5",
        type: {
          name: "ByteArray"
        }
      },
      transactionalContentHash: {
        xmlName: "transactionalContentHash",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const LeaseAccessConditions: msRest.CompositeMapper = {
  xmlName: "lease-access-conditions",
  type: {
    name: "Composite",
    className: "LeaseAccessConditions",
    modelProperties: {
      leaseId: {
        xmlName: "leaseId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceModifiedAccessConditions: msRest.CompositeMapper = {
  xmlName: "source-modified-access-conditions",
  type: {
    name: "Composite",
    className: "SourceModifiedAccessConditions",
    modelProperties: {
      sourceIfMatch: {
        xmlName: "sourceIfMatch",
        type: {
          name: "String"
        }
      },
      sourceIfNoneMatch: {
        xmlName: "sourceIfNoneMatch",
        type: {
          name: "String"
        }
      },
      sourceIfModifiedSince: {
        xmlName: "sourceIfModifiedSince",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      sourceIfUnmodifiedSince: {
        xmlName: "sourceIfUnmodifiedSince",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    }
  }
};

export const CpkInfo: msRest.CompositeMapper = {
  xmlName: "cpk-info",
  type: {
    name: "Composite",
    className: "CpkInfo",
    modelProperties: {
      encryptionKey: {
        xmlName: "encryptionKey",
        type: {
          name: "String"
        }
      },
      encryptionKeySha256: {
        xmlName: "encryptionKeySha256",
        type: {
          name: "String"
        }
      },
      encryptionAlgorithm: {
        xmlName: "encryptionAlgorithm",
        type: {
          name: "Enum",
          allowedValues: [
            "AES256"
          ]
        }
      }
    }
  }
};

export const ServiceListFileSystemsHeaders: msRest.CompositeMapper = {
  serializedName: "service-listfilesystems-headers",
  type: {
    name: "Composite",
    className: "ServiceListFileSystemsHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      continuation: {
        serializedName: "x-ms-continuation",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content-type",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemCreateHeaders: msRest.CompositeMapper = {
  serializedName: "filesystem-create-headers",
  type: {
    name: "Composite",
    className: "FileSystemCreateHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      namespaceEnabled: {
        serializedName: "x-ms-namespace-enabled",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemSetPropertiesHeaders: msRest.CompositeMapper = {
  serializedName: "filesystem-setproperties-headers",
  type: {
    name: "Composite",
    className: "FileSystemSetPropertiesHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemGetPropertiesHeaders: msRest.CompositeMapper = {
  serializedName: "filesystem-getproperties-headers",
  type: {
    name: "Composite",
    className: "FileSystemGetPropertiesHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "x-ms-properties",
        type: {
          name: "String"
        }
      },
      namespaceEnabled: {
        serializedName: "x-ms-namespace-enabled",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "filesystem-delete-headers",
  type: {
    name: "Composite",
    className: "FileSystemDeleteHeaders",
    modelProperties: {
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemListPathsHeaders: msRest.CompositeMapper = {
  serializedName: "filesystem-listpaths-headers",
  type: {
    name: "Composite",
    className: "FileSystemListPathsHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      continuation: {
        serializedName: "x-ms-continuation",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileSystemListBlobHierarchySegmentHeaders: msRest.CompositeMapper = {
  serializedName: "filesystem-listblobhierarchysegment-headers",
  type: {
    name: "Composite",
    className: "FileSystemListBlobHierarchySegmentHeaders",
    modelProperties: {
      contentType: {
        serializedName: "content-type",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathCreateHeaders: msRest.CompositeMapper = {
  serializedName: "path-create-headers",
  type: {
    name: "Composite",
    className: "PathCreateHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      continuation: {
        serializedName: "x-ms-continuation",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "content-length",
        type: {
          name: "Number"
        }
      },
      isServerEncrypted: {
        serializedName: "x-ms-request-server-encrypted",
        type: {
          name: "Boolean"
        }
      },
      encryptionKeySha256: {
        serializedName: "x-ms-encryption-key-sha256",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "path-update-headers",
  type: {
    name: "Composite",
    className: "PathUpdateHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      acceptRanges: {
        serializedName: "accept-ranges",
        type: {
          name: "String"
        }
      },
      cacheControl: {
        serializedName: "cache-control",
        type: {
          name: "String"
        }
      },
      contentDisposition: {
        serializedName: "content-disposition",
        type: {
          name: "String"
        }
      },
      contentEncoding: {
        serializedName: "content-encoding",
        type: {
          name: "String"
        }
      },
      contentLanguage: {
        serializedName: "content-language",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "content-length",
        type: {
          name: "Number"
        }
      },
      contentRange: {
        serializedName: "content-range",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content-type",
        type: {
          name: "String"
        }
      },
      contentMD5: {
        serializedName: "content-md5",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "x-ms-properties",
        type: {
          name: "String"
        }
      },
      xMsContinuation: {
        serializedName: "x-ms-continuation",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathLeaseHeaders: msRest.CompositeMapper = {
  serializedName: "path-lease-headers",
  type: {
    name: "Composite",
    className: "PathLeaseHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      leaseId: {
        serializedName: "x-ms-lease-id",
        type: {
          name: "String"
        }
      },
      leaseTime: {
        serializedName: "x-ms-lease-time",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathReadHeaders: msRest.CompositeMapper = {
  serializedName: "path-read-headers",
  type: {
    name: "Composite",
    className: "PathReadHeaders",
    modelProperties: {
      acceptRanges: {
        serializedName: "accept-ranges",
        type: {
          name: "String"
        }
      },
      cacheControl: {
        serializedName: "cache-control",
        type: {
          name: "String"
        }
      },
      contentDisposition: {
        serializedName: "content-disposition",
        type: {
          name: "String"
        }
      },
      contentEncoding: {
        serializedName: "content-encoding",
        type: {
          name: "String"
        }
      },
      contentLanguage: {
        serializedName: "content-language",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "content-length",
        type: {
          name: "Number"
        }
      },
      contentRange: {
        serializedName: "content-range",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content-type",
        type: {
          name: "String"
        }
      },
      contentMD5: {
        serializedName: "content-md5",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "x-ms-resource-type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "x-ms-properties",
        type: {
          name: "String"
        }
      },
      leaseDuration: {
        serializedName: "x-ms-lease-duration",
        type: {
          name: "String"
        }
      },
      leaseState: {
        serializedName: "x-ms-lease-state",
        type: {
          name: "String"
        }
      },
      leaseStatus: {
        serializedName: "x-ms-lease-status",
        type: {
          name: "String"
        }
      },
      isServerEncrypted: {
        serializedName: "x-ms-request-server-encrypted",
        type: {
          name: "Boolean"
        }
      },
      encryptionKeySha256: {
        serializedName: "x-ms-encryption-key-sha256",
        type: {
          name: "String"
        }
      },
      xMsContentMd5: {
        serializedName: "x-ms-content-md5",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathGetPropertiesHeaders: msRest.CompositeMapper = {
  serializedName: "path-getproperties-headers",
  type: {
    name: "Composite",
    className: "PathGetPropertiesHeaders",
    modelProperties: {
      acceptRanges: {
        serializedName: "accept-ranges",
        type: {
          name: "String"
        }
      },
      cacheControl: {
        serializedName: "cache-control",
        type: {
          name: "String"
        }
      },
      contentDisposition: {
        serializedName: "content-disposition",
        type: {
          name: "String"
        }
      },
      contentEncoding: {
        serializedName: "content-encoding",
        type: {
          name: "String"
        }
      },
      contentLanguage: {
        serializedName: "content-language",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "content-length",
        type: {
          name: "Number"
        }
      },
      contentRange: {
        serializedName: "content-range",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "content-type",
        type: {
          name: "String"
        }
      },
      contentMD5: {
        serializedName: "content-md5",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "x-ms-resource-type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "x-ms-properties",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "x-ms-owner",
        type: {
          name: "String"
        }
      },
      group: {
        serializedName: "x-ms-group",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "x-ms-permissions",
        type: {
          name: "String"
        }
      },
      aCL: {
        serializedName: "x-ms-acl",
        type: {
          name: "String"
        }
      },
      leaseDuration: {
        serializedName: "x-ms-lease-duration",
        type: {
          name: "String"
        }
      },
      leaseState: {
        serializedName: "x-ms-lease-state",
        type: {
          name: "String"
        }
      },
      leaseStatus: {
        serializedName: "x-ms-lease-status",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "path-delete-headers",
  type: {
    name: "Composite",
    className: "PathDeleteHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsVersion: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      xMsContinuation: {
        serializedName: "x-ms-continuation",
        type: {
          name: "String"
        }
      },
      deletionId: {
        serializedName: "x-ms-deletion-id",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathSetAccessControlHeaders: msRest.CompositeMapper = {
  serializedName: "path-setaccesscontrol-headers",
  type: {
    name: "Composite",
    className: "PathSetAccessControlHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathSetAccessControlRecursiveHeaders: msRest.CompositeMapper = {
  serializedName: "path-setaccesscontrolrecursive-headers",
  type: {
    name: "Composite",
    className: "PathSetAccessControlRecursiveHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      continuation: {
        serializedName: "x-ms-continuation",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathFlushDataHeaders: msRest.CompositeMapper = {
  serializedName: "path-flushdata-headers",
  type: {
    name: "Composite",
    className: "PathFlushDataHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      contentLength: {
        serializedName: "content-length",
        type: {
          name: "Number"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      isServerEncrypted: {
        serializedName: "x-ms-request-server-encrypted",
        type: {
          name: "Boolean"
        }
      },
      encryptionKeySha256: {
        serializedName: "x-ms-encryption-key-sha256",
        type: {
          name: "String"
        }
      },
      leaseRenewed: {
        serializedName: "x-ms-lease-renewed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathAppendDataHeaders: msRest.CompositeMapper = {
  serializedName: "path-appenddata-headers",
  type: {
    name: "Composite",
    className: "PathAppendDataHeaders",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      contentMD5: {
        serializedName: "content-md5",
        type: {
          name: "ByteArray"
        }
      },
      xMsContentCrc64: {
        serializedName: "x-ms-content-crc64",
        type: {
          name: "ByteArray"
        }
      },
      isServerEncrypted: {
        serializedName: "x-ms-request-server-encrypted",
        type: {
          name: "Boolean"
        }
      },
      encryptionKeySha256: {
        serializedName: "x-ms-encryption-key-sha256",
        type: {
          name: "String"
        }
      },
      leaseRenewed: {
        serializedName: "x-ms-lease-renewed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PathSetExpiryHeaders: msRest.CompositeMapper = {
  serializedName: "path-setexpiry-headers",
  type: {
    name: "Composite",
    className: "PathSetExpiryHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "last-modified",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PathUndeleteHeaders: msRest.CompositeMapper = {
  serializedName: "path-undelete-headers",
  type: {
    name: "Composite",
    className: "PathUndeleteHeaders",
    modelProperties: {
      clientRequestId: {
        serializedName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "x-ms-resource-type",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTimeRfc1123"
        }
      },
      errorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};
